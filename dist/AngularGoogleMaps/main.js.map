{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/zone.js/dist/zone-evergreen.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/bet-type-market/bet-type-market.component.ts","./src/app/components/bet-type-market/bet-type-market.component.html","./src/app/components/bet-type/bet-type.component.ts","./src/app/components/bet-type/bet-type.component.html","./src/app/components/country-crud/country-crud.component.ts","./src/app/components/country-crud/country-crud.component.html","./src/app/components/event-crud/event-crud.component.ts","./src/app/components/event-crud/event-crud.component.html","./src/app/components/markets/markets.component.ts","./src/app/components/markets/markets.component.html","./src/app/components/odds/odds.component.ts","./src/app/components/odds/odds.component.html","./src/app/components/printermake/printermake.component.ts","./src/app/components/printermake/printermake.component.html","./src/app/components/sport-country/sport-country.component.ts","./src/app/components/sport-country/sport-country.component.html","./src/app/components/sport-crud/sport-crud.component.ts","./src/app/components/sport-crud/sport-crud.component.html","./src/app/components/sport-tournament/sport-tournament.component.ts","./src/app/components/sport-tournament/sport-tournament.component.html","./src/app/components/tournament-bettype/tournament-bettype.component.ts","./src/app/components/tournament-bettype/tournament-bettype.component.html","./src/app/components/tournament-event/tournament-event.component.ts","./src/app/components/tournament-event/tournament-event.component.html","./src/app/components/tournaments-crud/tournaments-crud.component.ts","./src/app/components/tournaments-crud/tournaments-crud.component.html","./src/app/services/bet-type-market.service.ts","./src/app/services/bettype.service.ts","./src/app/services/country.service.ts","./src/app/services/errorhandler.service.ts","./src/app/services/event.service.ts","./src/app/services/market.service.ts","./src/app/services/odds.service.ts","./src/app/services/printermake.service.ts","./src/app/services/sport-tournament.service.ts","./src/app/services/sport-tree.service.ts","./src/app/services/sports-country.service.ts","./src/app/services/tournament-bettype.service.ts","./src/app/services/tournament.service.ts","./src/environments/environment.ts","./src/main.ts","./src/polyfills.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAA0C,GAAG,oCAAO,OAAO;AAAA;AAAA;AAAA;AAAA,oGAAC;AAChE,IAAI,SAAS;AACb,CAAC,eAAe;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iEAAiE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU,6CAA6C,eAAe;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpwBAAwB,mBAAmB;AAC3C,yBAAyB,oBAAoB;AAC7C,qCAAqC,8CAA8C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU,IAAI,YAAY,4BAA4B,QAAQ,sBAAsB,WAAW,GAAG,+CAA+C,SAAS,YAAY;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gIAAgI,wBAAwB,oCAAoC;AAC5L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,4BAA4B,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE,2CAA2C,cAAc;AACzD,8CAA8C,2CAA2C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,sEAAsE;AAC1J;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAoD;AAChG;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2EAA2E,gBAAgB;AAC3F,kCAAkC;AAClC;AACA,+BAA+B,qCAAqC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2CAA2C,gBAAgB;AAC3D,0CAA0C,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAiD;AACjF;AACA;AACA;AACA,+CAA+C,6BAA6B;AAC5E,8CAA8C,kCAAkC;AAChF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,0CAA0C,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0CAA0C,wCAAwC;AAClF,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uCAAuC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oCAAoC;AACroDAAoD,cAAc,mBAAmB,yBAAyB,EAAE,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,yDAAyD,aAAa,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B;AACrmCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,GAAG,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjmDAAmD,sDAAsD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,8FAA8F;AAC9F,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAA4E;AAC3F;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,0CAA0C;AAClH;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,CAAC;;;;;;;;;;;;;AC33FD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC6C;AAClB;AACM;AACG;AACS;AACM;AACxB;AACN;AACJ;AACwB;AACjC;AACuB;;;AAEtF,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","/**\n* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}((function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        if (!isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // and the rejected value is an Error object,\n                            // use the value instead of wrapping it.\n                            try {\n                                // Here we throws a new Error to print more readable error log\n                                // and if the value is not an error, zone.js builds an `Error`\n                                // Object here to attach the stack information.\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        class ZoneAwarePromise {\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            get [Symbol.species]() { return ZoneAwarePromise; }\n            then(onFulfilled, onRejected) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function prepareEventNames(eventName, eventNameToString) {\n        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            /**\n             * This util function will build an option object with passive option\n             * to handle all possible input from the user.\n             */\n            function buildEventListenerOptions(options, passive) {\n                if (!passiveSupported && typeof options === 'object' && options) {\n                    // doesn't support passive but user want to pass an object as options.\n                    // this will not work on some old browser, so we just pass a boolean\n                    // as useCapture parameter\n                    return !!options.capture;\n                }\n                if (!passiveSupported || !passive) {\n                    return options;\n                }\n                if (typeof options === 'boolean') {\n                    return { capture: options, passive: true };\n                }\n                if (!options) {\n                    return { passive: true };\n                }\n                if (typeof options === 'object' && options.passive !== false) {\n                    return Object.assign(Object.assign({}, options), { passive: true });\n                }\n                return options;\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                    const options = buildEventListenerOptions(arguments[2], passive);\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                if (passive) {\n                                    return nativeListener.call(target, eventName, delegate, options);\n                                }\n                                else {\n                                    return nativeListener.apply(this, arguments);\n                                }\n                            }\n                        }\n                    }\n                    const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                    const once = options && typeof options === 'object' ? options.once : false;\n                    const zone = Zone.current;\n                    let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (!symbolEventNames) {\n                        prepareEventNames(eventName, eventNameToString);\n                        symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    }\n                    const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        if (!eventName) {\n            const foundTasks = [];\n            for (let prop in target) {\n                const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                let evtName = match && match[1];\n                if (evtName && (!eventName || evtName === eventName)) {\n                    const tasks = target[prop];\n                    if (tasks) {\n                        for (let i = 0; i < tasks.length; i++) {\n                            foundTasks.push(tasks[i]);\n                        }\n                    }\n                }\n            }\n            return foundTasks;\n        }\n        let symbolEventName = zoneSymbolEventNames$1[eventName];\n        if (!symbolEventName) {\n            prepareEventNames(eventName);\n            symbolEventName = zoneSymbolEventNames$1[eventName];\n        }\n        const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n        const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n        if (!captureFalseTasks) {\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\n        }\n        else {\n            return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n                captureFalseTasks.slice();\n        }\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplayconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n})));\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TournamentsCrudComponent } from './components/tournaments-crud/tournaments-crud.component';\nimport { SportCrudComponent } from './components/sport-crud/sport-crud.component';\nimport { CountryCrudComponent } from './components/country-crud/country-crud.component';\nimport { SportCountryComponent } from './components/sport-country/sport-country.component';\nimport { SportTournamentComponent } from './components/sport-tournament/sport-tournament.component';\nimport { TournamentBettypeComponent } from './components/tournament-bettype/tournament-bettype.component';\nimport { EventCrudComponent } from './components/event-crud/event-crud.component';\nimport { BetTypeComponent } from './components/bet-type/bet-type.component';\nimport {MarketsComponent} from './components/markets/markets.component';\nimport { BetTypeMarketComponent } from './components/bet-type-market/bet-type-market.component';\nimport {OddsComponent} from './components/odds/odds.component';\nimport { PrintermakeComponent } from './components/printermake/printermake.component';\n\nconst routes: Routes = [\n  {path:'', component:SportCrudComponent},\n\n  {path:'sport/tournaments', component:TournamentsCrudComponent},\n  {path:'sport/sports', component:SportCrudComponent},\n  {path:'sport/countries', component:CountryCrudComponent},\n  {path:'sport/linkSport', component:SportCountryComponent},\n  {path:'sport/linkTournament', component:SportTournamentComponent},\n  {path:'sport/linkBetType', component:TournamentBettypeComponent},\n  {path:'sport/event', component:EventCrudComponent},\n  {path:'sport/betType', component:BetTypeComponent},\n  {path:'sport/market', component:MarketsComponent},\n  {path:'sport/batTypeMarket', component:BetTypeMarketComponent},\n  {path:'sport/odds', component:OddsComponent},\n  {path:'make/makes', component:PrintermakeComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { FormControl } from \"@angular/forms\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\n\nexport class AppComponent  {\n  title = 'Angular 5';\n  constructor(\n  ) { }\n\n  ngOnInit() {\n    \n  \n  }\n\n\n\n\n\n}\n\n\n","<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <title>Title</title>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <!-- Bootstrap CSS -->\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n    integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n</head>\n\n<body>\n  <nav class=\"navbar navbar-expand-sm navbar-light bg-light text-dark\">\n   \n\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <a class=\"navbar-brand \" href=\"#\"><img src=\"https://new.hollywoodbets.net/assets/images/header-logo.png\" alt=\"Sport Admin Logo\"></a>\n              <button class=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\"\n                aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n              </button>\n            </div>\n            <div class=\"col-md-10\">\n              \n              <div class=\"collapse navbar-collapse align-center collaps-nav\" id=\"collapsibleNavId\" >\n                <ul class=\"navbar-nav mr-auto  mt-lg-0\">\n                  <li class=\"nav-item active\">\n                    <a class=\"nav-link\" routerLink=\"//make/makes\">Printer Make <span class=\"sr-only\">(current)</span></a>\n                  <!-- </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/sport/countries\">Countries</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/sport/tournaments\">Tournaments</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/sport/event\">Events</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/sport/betType\">Bet Types</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/sport/market\">Markets</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/sport/odds\">Odds</a>\n                  </li> -->\n          \n                  <!-- <li class=\"nav-item dropdown text-dark\">\n                    <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                      aria-expanded=\"false\">Linking Associations</a>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                      <a class=\"dropdown-item\" routerLink=\"/sport/linkSport\">Link Sport</a>\n                      <a class=\"dropdown-item\" routerLink=\"/sport/linkTournament\">Link Tournament</a>\n                      <a class=\"dropdown-item\" routerLink=\"/sport/linkBetType\">Link BetType</a>\n                      <a class=\"dropdown-item\" routerLink=\"/sport/batTypeMarket\">Link BetType Market</a>\n                    </div>\n                  </li> -->\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n\n  </nav>\n  <div class=\"container\">\n    <!-- <app-course></app-course> -->\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <router-outlet></router-outlet>\n\n      </div>\n    </div>\n    <!-- <app-map></app-map> -->\n\n  </div>\n\n  <!-- Optional JavaScript -->\n  <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n  <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n    integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n    crossorigin=\"anonymous\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\n    integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\n    crossorigin=\"anonymous\"></script>\n  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\n    integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\n    crossorigin=\"anonymous\"></script>\n</body>\n\n</html>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TournamentsCrudComponent } from './components/tournaments-crud/tournaments-crud.component';\nimport { SportCrudComponent } from './components/sport-crud/sport-crud.component';\nimport { CountryCrudComponent } from './components/country-crud/country-crud.component';\nimport { SportCountryComponent } from './components/sport-country/sport-country.component';\nimport { SportTournamentComponent } from './components/sport-tournament/sport-tournament.component';\nimport { TournamentEventComponent } from './components/tournament-event/tournament-event.component';\nimport { TournamentBettypeComponent } from './components/tournament-bettype/tournament-bettype.component';\nimport { EventCrudComponent } from './components/event-crud/event-crud.component';\nimport { BetTypeComponent } from './components/bet-type/bet-type.component';\nimport { BetTypeMarketComponent } from './components/bet-type-market/bet-type-market.component';\nimport { MarketsComponent } from './components/markets/markets.component';\nimport { OddsComponent } from './components/odds/odds.component';\nimport {CommonModule} from '@angular/common';\nimport { PrintermakeComponent } from './components/printermake/printermake.component';\n@NgModule({\n  imports:      [ \n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n \n     ],\n  declarations: [ AppComponent, TournamentsCrudComponent, \n    SportCrudComponent, CountryCrudComponent, SportCountryComponent, \n    SportTournamentComponent, TournamentEventComponent, TournamentBettypeComponent,\n     EventCrudComponent, BetTypeComponent, BetTypeMarketComponent, MarketsComponent, OddsComponent, PrintermakeComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {BetTypeMarketService} from '../../services/bet-type-market.service';\nimport {BetTypeMarket} from '../../Models/betTypeMarket';\nimport {BetType} from '../../Models/betType';\nimport {Market} from '../../Models/market';\nimport {FormBuilder} from '@angular/forms';\nimport {BettypeService} from '../../services/bettype.service';\nimport {MarketService} from '../../services/market.service';\nimport { BetTypeVm } from 'src/app/Models/ViewModels/betTypeVm';\n\n@Component({\n  selector: 'app-bet-type-market',\n  templateUrl: './bet-type-market.component.html',\n  styleUrls: ['./bet-type-market.component.css']\n})\nexport class BetTypeMarketComponent implements OnInit {\n\n  betTypeMarkets:BetTypeVm[];\n  betTypeMarket:BetTypeMarket;\n  betTypes:BetType[];\n  selectedBetType:BetType;\n  markets:Market[];\n  selectedMarket:Market;\n  betTypeMarketForm:any;\n  marketId:number;\n  betTypeId:number;\n  btmUpdate:number;\n  betTypeMarketUpdate:number;\n  \n\n  constructor(private betTyMarketService:BetTypeMarketService, private marketService:MarketService,\n              private betTypeService:BettypeService,private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getBettypeAssociations();\n    this.getMarkets();\n    this.getBetTypes();\n    this.betTypeMarketForm=this.formBuilder.group({\n    });\n  }\n\n  getBettypeAssociations(){\n    this.betTyMarketService.getBetTypeMarkets().subscribe((data:any)=>{\n      this.betTypeMarkets=data;\n    });\n  }\n\n  getBetTypes(){\n    this.selectedBetType={\n      BetTypeId:null,\n      BetTypeName:'Select Bet Type'\n    }\n    this.betTypeService.getBeTypes().subscribe((data:any)=>{\n      this.betTypes=data;\n    });\n  }\n\n  getMarkets(){\n    this.selectedMarket={\n      MarketId:null,\n      MarketName:'Select Market'\n    }\n    this.marketService.getMarkets().subscribe((data:any)=>{\n      this.markets=data;\n    });\n  }\n\n  addAsscociation(betTypeMarket:BetTypeMarket){\n    if(betTypeMarket!=undefined && betTypeMarket!=null){\n      if(this.betTypeMarketUpdate==null){\n        betTypeMarket.BetTypeMarketId=this.betTypeMarkets.length+1;\n        betTypeMarket.BetTypeId=this.betTypeId;\n        betTypeMarket.MarketId=this.marketId;\n        this.betTyMarketService.addAssociation(betTypeMarket).subscribe((data)=>{\n          if(data!=null && data!=undefined){\n            this.getBettypeAssociations();\n          }\n        });\n      }\n      else{\n        //TODOD UPDATE ASSOCIATIONS\n        betTypeMarket.BetTypeMarketId=this.betTypeMarketUpdate;\n        betTypeMarket.MarketId=this.selectedMarket.MarketId;\n        betTypeMarket.BetTypeId=this.selectedBetType.BetTypeId;\n        this.betTyMarketService.updateAssociations(this.betTypeMarketUpdate,betTypeMarket).subscribe((data:any)=>{\n         alert(data.text);\n         console.log(data);\n          this.setHeading();\n          this.getBettypeAssociations();\n        });\n      }\n    }\n  }\n\n\n  deleteAssociation(betTypeMarketId:number){\n    console.log('submited id',betTypeMarketId);\n    if(window.confirm(\"Are you sure you want delete link\")){\n      this.betTyMarketService.deleteAssociation(betTypeMarketId).subscribe((data:any)=>{\n        if(data!=null && data!=undefined){\n          this.getBettypeAssociations();\n        }\n      });\n    }\n   \n  }\n\n\n  loadDataForEdit(betTypeMarketId:number){\n    this.betTypeMarketUpdate=betTypeMarketId;\n    this.betTyMarketService.getSingleBetTypeMarkets(betTypeMarketId).subscribe((data:any)=>{\n      this.getBetTypeForDropdown(data[0].BetTypeId);\n      this.getMarketForDropdown(data[0].MarketId);\n    })\n  }\n\n\n  getMarketForDropdown(marketId:number){\n    this.marketService.getSingleMarket(marketId).subscribe((data:any)=>{\n       this.selectedMarket=data[0];\n    });\n  }\n  getBetTypeForDropdown(betTypeId:number){\n    this.betTypeService.getSingleBetType(betTypeId).subscribe((data:any)=>{\n      this.selectedBetType=data[0];\n    });\n  }\n\n  getBetTypeId(betType:any){\n    this.selectedBetType=betType;\n    this.betTypeId=betType.BetTypeId;\n    console.log('submited Id', this.betTypeId);\n\n  }\n  getMarketId(market:any){\n    this.selectedMarket=market;\n    this.marketId=this.selectedMarket.MarketId;\n    console.log('submited Id', this.marketId);\n  }\n\n  onformSubmit(){\n    const formData=this.betTypeMarketForm.value;\n    this.addAsscociation(formData);\n  }\n\n  clearForm(){\n    this.betTypeMarketForm.reset();\n  }\n\n  setHeading(){\n    this.betTypeMarketUpdate=null;\n    this.selectedMarket={\n      MarketId:null,\n      MarketName:'Select Market'\n    };\n    this.selectedBetType={\n      BetTypeId:null,\n      BetTypeName:'Select Bet Type'\n    };\n  }\n\n}\n","<div class=\"container btm-container\">\n    <div class=\"row mt-2\">\n\n\n        <!-- Button trigger modal -->\n        <button type=\"button\" class=\"btn btn-primary btn-add ml-3\" data-toggle=\"modal\" data-target=\"#modelId\">\n            Add New Link\n        </button>\n\n\n          <!-- Modal -->\n  <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <ng-template [ngIf]=\"betTypeMarketUpdate==null\">\n                    <h5 class=\"modal-title\">Link Market</h5>\n                </ng-template>\n                <ng-template [ngIf]=\"betTypeMarketUpdate!=null\">\n                    <h5 class=\"modal-title\">Update Link</h5>\n                </ng-template>\n                \n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"setHeading()\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n            </div>\n            <div class=\"modal-body\">\n                <form action=\"\" [formGroup]=\"betTypeMarketForm\">\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-4\">\n                            <label for=\"Department Name\">Select BetType</label>\n                             <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                        </div>\n                        <div class=\"colo-md-8\" >\n                          <div class=\"dropdown open\">\n                              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                  id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                  aria-expanded=\"false\">\n                                  {{selectedBetType.BetTypeName}}\n                              </button>\n                              <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\"  >\n                                  <button class=\"dropdown-item\" *ngFor=\"let bt of betTypes\" (click)=\"getBetTypeId(bt)\">\n                                      {{bt.BetTypeName}}</button>\n                              </div>\n                          </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-4\">\n                            <label for=\"Country Name\">Select Markert </label>\n                             <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                        </div>\n                        <div class=\"colo-md-8\" >\n                            <div class=\"dropdown open\">\n                                <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                    id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                    aria-expanded=\"false\">\n                                    {{selectedMarket.MarketName}}\n                                </button>\n                                <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\">\n                                    <button class=\"dropdown-item\" *ngFor=\"let m of markets\"\n                                       (click)=\"getMarketId(m)\" >{{m.MarketName}}</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n              \n                </form>\n            \n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setHeading()\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onformSubmit()\">Save</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n        <div class=\"col-md-12\">\n            <table class=\"table table-striped\">\n                <thead >\n                    <tr>\n                        <th>Id</th>\n                        <!-- <th>BetType Id</th> -->\n                        <th>BetType Name</th>\n                        <!-- <th>Market Id</th> -->\n                        <th>Market Name</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let btm of betTypeMarkets\">\n                        <td>{{btm.BetTypeMarketId}}</td>\n                        <!-- <td>{{btm.BetTypeId}}</td> -->\n                        <td>{{btm.BetTypeName}}</td>\n                        <!-- <td>{{btm.MarketId}}</td> -->\n                        <td>{{btm.MarketName}}</td>\n                        <td>\n                            <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modelId\" (click)=\"loadDataForEdit(btm.BetTypeMarketId)\">Update</button>|\n                            <button class=\"btn btn-danger\" (click)=\"deleteAssociation(btm.BetTypeMarketId)\">UnLink</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BetType } from '../../Models/betType';\nimport { BettypeService } from '../../services/bettype.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-bet-type',\n  templateUrl: './bet-type.component.html',\n  styleUrls: ['./bet-type.component.css']\n})\nexport class BetTypeComponent implements OnInit {\n\n  betTypes: BetType[];\n  betTypeLocal: BetType;\n  betTypeUpdate: number;\n  betTypeForm: any;\n\n  constructor(private betTypeService: BettypeService, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getBetTypes();\n    this.betTypeForm = this.formBuilder.group({\n      BetTypeName: ['', Validators.required]\n    });\n  }\n\n  getBetTypes() {\n    this.betTypeService.getBeTypes().subscribe((data: any) => {\n      this.betTypes = data;\n      // console.log('Bet Types', this.betTypes);\n    });\n  }\n\n  addBetType(betType: BetType) {\n    if (betType != null && betType != undefined) {\n      if (this.betTypeUpdate == null) {\n          betType.BetTypeId=this.betTypes.length+1;\n        this.betTypeService.addBetType(betType).subscribe((data: any) => {\n          if (data != null) {\n            this.getBetTypes();\n            this.clearForm();\n          }\n        });\n      }\n      else {\n        ///TO DO UPDATE EVENT\n        betType.BetTypeId=this.betTypeUpdate;\n        this.betTypeService.updateBetType(this.betTypeUpdate,betType).subscribe((data:any)=>{\n            if(data!=null){\n              this.getBetTypes();\n              this.betTypeUpdate=null;\n              this.clearForm();\n            }\n        });\n      }\n    }\n\n  }\n\n  deleteBetType(betTypeId: number) {\n    if(window.confirm(\"Are you sure you want to delete recod\")){\n      this.betTypeService.deleteBetType(betTypeId).subscribe((data: any) => {\n        if (data != null) {\n          this.getBetTypes();\n        }\n      });\n    }\n  }\n\n  onformSubmit(){\n    const formData=this.betTypeForm.value;\n    this.addBetType(formData);\n  }\n\n\n\n  loadBetType(betTypeId:number){\n    console.log('Id', betTypeId);\n    this.betTypeService.getSingleBetType(betTypeId).subscribe((data:any)=>{\n      this.betTypeLocal=data;\n      // console.log('this is what i found');\n      this.betTypeForm.controls['BetTypeName'].setValue(data[0].BetTypeName);\n      this.betTypeUpdate=betTypeId;\n    });\n  }\n  clearForm(){\n    this.betTypeForm.reset();\n  }\n\n  setHeading(){\n    this.betTypeUpdate=null;\n    this.clearForm();\n  }\n\n}\n","<div class=\"container container-betType\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n            <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\" >\n                Add BetType\n              </button>\n\n\n              <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">\n                                <ng-template [ngIf]=\"betTypeUpdate==null\">\n                                   Add Bet Type\n                                </ng-template>\n                                <ng-template [ngIf]=\"betTypeUpdate!=null\">\n                                   Update Bet Type\n                                </ng-template>\n                               \n                               </h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                        </div>\n\n                        <div class=\"modal-body\">\n                           <form action=\"\" [formGroup]=\"betTypeForm\">\n                               <div class=\"form-group row\">\n                                   <div class=\"col-md-4\">\n                                       <label for=\"Bet Type\">Bet Type</label>\n                                        <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                   </div>\n                                   <div class=\"colo-md-8\" >\n                                    <input type=\"text\"   class=\"form-control\" id=\"BetTypeName\" placeholder=\"BetType Name\" formControlName=\"BetTypeName\">\n                                   </div>\n                               </div>\n                           </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setHeading()\">Close</button>\n                            <button type=\"submit\" class=\"btn btn-primary\"  data-dismiss=\"modal\"  (click)=\"onformSubmit()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n            <table class=\"table table-striped\">\n                <thead >\n                    <tr>\n                        <th>Id</th>\n                        <th>BeT Type</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let bt of betTypes\">\n                        <td>{{bt.BetTypeId}}</td>\n                        <td>{{bt.BetTypeName}}</td>\n                        <td>\n                            <button class=\"btn btn-danger\" (click)=\"deleteBetType(bt.BetTypeId)\">Delete</button>|\n                            <button class=\"btn btn-primary\"   data-toggle=\"modal\" data-target=\"#modelId\"   (click)=\"loadBetType(bt.BetTypeId)\">Update</button>\n\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Country } from '../../Models/country';\nimport {CountryService} from '../../services/country.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-country-crud',\n  templateUrl: './country-crud.component.html',\n  styleUrls: ['./country-crud.component.css']\n})\nexport class CountryCrudComponent implements OnInit {\ncountries:Country[]=[];\ncountryForm:any;\ncountry:Country;\ncountryUpdate=null;\nformHeading:string;\n  constructor(private countryService:CountryService,private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getCountries();\n    this.countryForm=this.formBuilder.group({\n      CountryName:['',Validators.required],\n      Flag:['',Validators.nullValidator],\n    })\n  }\n \n\n  getCountries(){\n     this.countryService.getCountries().subscribe((data:any)=>{\n       this.countries=data;\n     });\n  }\n\n  addCountry(country:Country){\n    if(country!=undefined && country!=null){\n      if(this.countryUpdate==null){\n        country.CountryId=this.countries.length+1;\n        this.countryService.addCountry(country).subscribe(()=>{\n          this.setHeading();\n        this.getCountries();\n        });\n      }\n      else{\n        country.CountryId=this.countryUpdate;\n        this.countryService.updateCountry(this.countryUpdate,country).subscribe(()=>{\n          this.getCountries();\n          this.setHeading();\n         \n        })\n      }\n    }\n  }\n\n\n  deleteCountry(countryId:number){\n    if(window.confirm('Are you sure you want to delete this record')){\n      this.countryService.deleteCountry(countryId).subscribe(()=>{\n        this.getCountries();\n      });\n    }\n    else{\n      this.getCountries();\n    }\n  }\n\n  getCountryForEdit(countryId:number){\n    this.countryService.getSingleCountry(countryId).subscribe((data:any)=>{\n      this.country=data;\n    });\n  }\n\n  onFormSubmit(){\n    const countryData=this.countryForm.value;\n    this.addCountry(countryData);\n  }\n\n  loadCountryToEdit(countryId:number){\n    this.countryService.getSingleCountry(countryId).subscribe((data:any)=>{\n      this.country=data;\n      this.countryUpdate=countryId;\n      console.log('Found this', this.country)\n      this.countryForm.controls['CountryName'].setValue(data[0].CountryName);\n      this.countryForm.controls['Flag'].setValue(data[0].Flag);  \n    });\n  }\n\n  resertForm(){\n    this.countryForm.reset();\n  }\n\n  setHeading(){\n    this.countryUpdate=null;\n    this.resertForm();\n  }\n\n}\n","<div class=\"container country-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n\n                 <!-- Button trigger modal -->\n                 <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\" (cick)=\"setHeading()\">\n                   Add Country\n                 </button>\n                 \n                 <!-- Modal -->\n                 <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n                     <div class=\"modal-dialog\" role=\"document\">\n                         <div class=\"modal-content\">\n                             <div class=\"modal-header\">\n                                 <h5 class=\"modal-title\">\n                                     <ng-template [ngIf]=\"countryUpdate===null\">\n                                        Add Country\n                                     </ng-template>\n                                     <ng-template [ngIf]=\"countryUpdate!=null\">\n                                        Update Country\n                                     </ng-template>\n                                    \n                                    </h5>\n                                     <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"setHeading()\">\n                                         <span aria-hidden=\"true\">&times;</span>\n                                     </button>\n                             </div>\n                             <div class=\"modal-body\">\n                                <form action=\"\" [formGroup]=\"countryForm\">\n                                    <div class=\"form-group row\">\n                                        <div class=\"col-md-4\">\n                                            <label for=\"Department Name\">Country Name</label>\n                                             <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                        </div>\n                                        <div class=\"colo-md-8\" >\n                                             <input type=\"text\"   class=\"form-control\" id=\"CountryName\" placeholder=\"Country Name\" formControlName=\"CountryName\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <div class=\"col-md-4\">\n                                            <label for=\"Department Name\">Country Flag</label>\n                                             <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                        </div>\n                                        <div class=\"colo-md-8\" >\n                                             <input type=\"text\"  class=\"form-control\" id=\"Flag\" placeholder=\"Country Flag\" formControlName=\"Flag\">\n                                        </div>\n                                    </div>\n                                </form>\n                             </div>\n                             <div class=\"modal-footer\">\n                                 <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setHeading()\">Close</button>\n                                 <button type=\"submit\" class=\"btn btn-primary\"  data-dismiss=\"modal\"  (click)=\"onFormSubmit()\">Save</button>\n                             </div>\n                         </div>\n                     </div>\n                 </div>\n\n\n            <table class=\"table table-striped\">\n                <thead >\n                    <tr>\n                        <th> Id</th>\n                        <th>Country Name</th>\n                        <th>Country Abbrev</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody class=\"justify-content-center\">\n                   \n                    <tr *ngFor=\"let country of countries\">\n                        <td>{{country.CountryId}}</td>\n                        <td>{{country.CountryName}}</td>\n                        <td>{{country.Flag}}</td>\n                        <!-- <td>\n                            <img src=\"https://www.countryflags.io/{{country.Flag}}/flat/24.png\"\n                            alt=\"\">\n                        </td> -->\n                        <td>\n                            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteCountry(country.CountryId)\">Delete</button>|\n                            <button type=\"button\" class=\"btn btn-primary btn-primary btn-update\" data-toggle=\"modal\" data-target=\"#modelId\" (click)=\"loadCountryToEdit(country.CountryId)\"> Update</button>\n                        </td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </table>\n\n\n          \n            \n        \n        \n   \n            \n            <script>\n                $('#exampleModal').on('show.bs.modal', event => {\n                    var button = $(event.relatedTarget);\n                    var modal = $(this);\n                    // Use above variables to manipulate the DOM\n                    \n                });\n            </script>\n            \n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Event } from '../../Models/event';\nimport { Tournament } from '../../Models/tournament';\nimport { TournamentService } from '../../services/tournament.service';\nimport { EventService } from '../../services/event.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {EventVm} from '../../Models/ViewModels/eventVm';\n\n@Component({\n  selector: 'app-event-crud',\n  templateUrl: './event-crud.component.html',\n  styleUrls: ['./event-crud.component.css']\n})\nexport class EventCrudComponent implements OnInit {\n  tournaments: Tournament[];\n  Selectedtournament: Tournament;\n  tournamentId: number;\n  events: EventVm[];\n  event: Event;\n  eventId: number;\n  eventForm:any;\n  eventLocalData:Event;\n  eventUpdate:number;\n\n  constructor(private eventService:EventService,private tournamentService:TournamentService,\n              private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getTournaments();\n    this.getEvents();\n    this.eventForm=this.formBuilder.group({\n      EventName:['',Validators.required],\n      EeventDate:['',Validators.required]\n    });\n    // this.tournaments.lenghtl\n  }\n\n  ngAfterContentChcked(){\n    this.Selectedtournament={\n      TournamentId:null,\n      Name:'Select Tournament'\n    }\n  }\n\n  getEvents(){\n    this.eventService.getEvents().subscribe((data:any)=>{\n      this.events=data;\n      console.log('events', this.events);\n    });\n  }\n\n  // getSingleEvent(eventId:number){\n  //   this.eventService.getSingleEvent(eventId).subscribe((data)=>{\n  //     this.event=data;\n  //   });\n  // }\n  getTournaments(){\n    this.Selectedtournament={\n      TournamentId:null,\n      Name:'Select Tournament'\n    };\n    this.tournamentService.getTournaments().subscribe((data:any)=>{\n      this.tournaments=data;\n      // this.Selectedtournament=data[0];\n    });\n  }\n\n  addEvent(event:Event){\n    console.log('UpdateId',this.eventUpdate);\n    if(event!=undefined && event!=null){\n      if(this.eventUpdate==null){\n        event.EventId=this.events.length+2;\n        event.TournamentId=this.tournamentId;\n        this.eventService.addEvent(event).subscribe((data:any)=>{\n          if(data!=null){\n            this.getEvents();\n            this.changeHeading();\n          }\n        });\n      }\n      else{\n        event.EventId=this.eventUpdate;\n        event.TournamentId=Number(this.tournamentId);\n        this.eventService.updateEvent(this.eventUpdate,event).subscribe((data:any)=>{\n            this.getEvents();\n            this.changeHeading();\n        });\n      }\n    }\n  }\n\n   deleteEvent(eventId:number){\n     if(window.confirm(\"Are you sure you want to delete the record\")){\n      this.eventService.deleteEvent(eventId).subscribe((data:any)=>{\n        if(data!=null){\n          this.getEvents();\n        }\n      });\n     }\n   }\n\n   loadEventToEdit(eventId:number){\n      this.eventUpdate=eventId;\n      this.eventService.getSingleEvent(eventId).subscribe((data)=>{\n      this.event=data;\n      this.tournamentId=this.event[0].TournamentId;\n      this.eventForm.controls['EventName'].setValue(this.event[0].EventName);\n      this.eventForm.controls['EeventDate'].setValue(this.event[0].EeventDate);\n    });\n     console.log('eventId passed ',eventId)\n    //  this.eventForm.\n   }\n\n\n   onFormSubmit(){\n      const formData=this.eventForm.value;\n      this.addEvent(formData);\n   }\n\n   getTournamentId(tournamentId:any){\n     this.Selectedtournament=tournamentId;\n     this.tournamentId=this.Selectedtournament.TournamentId;\n     console.log('submited id', this.tournamentId);\n   }\n   clearForm(){\n     this.eventForm.reset();\n   }\n\n   changeHeading(){\n     this.eventUpdate=null;\n     this.Selectedtournament={\n      Name:\"Select Tournament\",\n      TournamentId:null\n    };\n    this.clearForm();\n    //  console.log('HEading changed to ', this.eventUpdate)\n   }\n\n\n}\n","<div class=\"container event-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n            <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\" >\n                Add Event\n              </button>\n              <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">\n                                <ng-template [ngIf]=\"eventUpdate==null\">\n                                   Add Event\n                                </ng-template>\n                                <ng-template [ngIf]=\"eventUpdate!=null\">\n                                   Update Event\n                                </ng-template>\n                               \n                               </h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"changeHeading()\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                        </div>\n\n                        <div class=\"modal-body\">\n                           <form action=\"\" [formGroup]=\"eventForm\">\n                               <div class=\"form-group row\">\n                                   <div class=\"col-md-4\">\n                                       <label for=\"Event Name\">Tournament</label>\n                                        <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                   </div>\n                                   <div class=\"colo-md-8\" >\n                                    <div class=\"dropdown open\">\n                                        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                            id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                            aria-expanded=\"false\">\n                                           {{Selectedtournament.Name}}\n                                        </button>\n                                        <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\">\n                                            <button class=\"dropdown-item\" *ngFor=\"let t of tournaments\"\n                                               (click)=\"getTournamentId(t)\" >{{t.Name}}</button>\n                                        </div>\n                                    </div>\n                                   </div>\n                               </div>\n                               <div class=\"form-group row\">\n                                   <div class=\"col-md-4\">\n                                       <label for=\"Event Name\">Event Name</label>\n                                        <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                   </div>\n                                   <div class=\"colo-md-8\" >\n                                        <input type=\"text\"   class=\"form-control\" id=\"CountryName\" placeholder=\"Event Name\" formControlName=\"EventName\">\n                                   </div>\n                               </div>\n                               <div class=\"form-group row\">\n                                   <div class=\"col-md-4\">\n                                       <label for=\"Event Date\">Event Date</label>\n                                        <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                   </div>\n                                   <div class=\"colo-md-8\" >\n                                        <input type=\"text\"  class=\"form-control\" id=\"Flag\" placeholder=\"Event Date\" formControlName=\"EeventDate\">\n                                   </div>\n                               </div>\n                           </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"changeHeading()\">Close</button>\n                            <button type=\"submit\" class=\"btn btn-primary\"  data-dismiss=\"modal\"  (click)=\"onFormSubmit()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n\n            <table class=\"table table-striped\">\n                <thead >\n                    <tr>\n                        <th>Id</th>\n                        <th>Tournament Name</th>\n                        <th>Event Name</th>\n                        <th>Event Date</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let e of events\">\n                        <td>{{e.EventId}}</td>\n                        <td>{{e.TournamentName}}</td>\n                        <td>{{e.EventName}}</td>\n                        <td>{{e.EeventDate | date : \"EEEE,MMMM,dd,yyyy\"}}</td>\n                        <td>\n                            <button class=\"btn btn-danger\" (click)=\"deleteEvent(e.EventId)\">Delete</button>|\n                            <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modelId\"(click)=\"loadEventToEdit(e.EventId)\">Update</button>\n\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n\n\n\n\n\n\n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Market } from '../../Models/market';\nimport { MarketService } from '../../services/market.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { from } from 'rxjs';\n@Component({\n  selector: 'app-markets',\n  templateUrl: './markets.component.html',\n  styleUrls: ['./markets.component.css']\n})\nexport class MarketsComponent implements OnInit {\n\n  markets: Market[];\n  marketLocal: Market;\n  marketForm: any;\n  updateMarket: number;\n\n  constructor(private marketService: MarketService, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getMarkets();\n    this.marketForm = this.formBuilder.group({\n      MarketName: ['', Validators.required]\n    });\n  }\n\n  getMarkets() {\n    this.marketService.getMarkets().subscribe((data: any) => {\n      this.markets = data;\n      // console.log('retrieved', this.markets);\n    });\n  }\n\n  addMarket(market: Market) {\n    if (market != undefined && market != null) {\n      if (this.updateMarket == null) {\n        market.MarketId = this.markets.length + 1;\n        this.marketService.addMarket(market).subscribe((data: any) => {\n          if (data != null) {\n            this.getMarkets();\n            this.clearForm();\n          }\n        });\n      }\n      else {\n        //TODO UPDATE MARKET\n        market.MarketId = this.updateMarket;\n        this.marketService.updateMarket(this.updateMarket, market).subscribe((data: any) => {\n          if (data != undefined || data != null) {\n            this.getMarkets();\n            this.clearForm();\n            this.updateMarket=null;\n          }\n        });\n      }\n    }\n  }\n\n  deletMarket(marketId: number) {\n    if (window.confirm(\"Are you sure you want to delete record\")) {\n      this.marketService.deleteMarket(marketId).subscribe((data: any) => {\n        if (data != null || data != undefined) {\n          this.getMarkets();\n        }\n      });\n    }\n  }\n\n  loadFrom(marketId: number) {\n    this.updateMarket = marketId;\n    this.marketService.getSingleMarket(marketId).subscribe((data: any) => {\n      // console.log('I found this', data);\n      this.marketForm.controls['MarketName'].setValue(data[0].MarketName)\n    });\n  }\n\n  onFormSubmit() {\n    const formData = this.marketForm.value;\n    this.addMarket(formData);\n  }\n\n\n  clearForm() {\n    this.marketForm.reset();\n  }\n\n  setaHeading(){\n    this.updateMarket=null;\n    this.clearForm();\n  }\n\n}\n","<div class=\"container market-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n\n\n        \n            <!-- Button trigger modal -->\n            <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Add Market\n            </button>\n\n\n            <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">\n                                <ng-template [ngIf]=\"updateMarket==null\">\n                                   Add Market\n                                </ng-template>\n                                <ng-template [ngIf]=\"updateMarket!=null\">\n                                   Update Market\n                                </ng-template>\n                               \n                               </h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"setaHeading()\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                        </div>\n\n                        <div class=\"modal-body\">\n                           <form  [formGroup]=\"marketForm\">\n                               <div class=\"form-group row\">\n                                   <div class=\"col-md-4\">\n                                       <label for=\"Market Name\">Market Name</label>\n                                   </div>\n                                   <div class=\"colo-md-8\" >\n                                        <input type=\"text\"   class=\"form-control\" id=\"MarketName\" placeholder=\"Market Name\" formControlName=\"MarketName\">\n                                   </div>\n                               </div>\n                           </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setaHeading()\">Close</button>\n                            <button type=\"submit\" class=\"btn btn-primary\"  data-dismiss=\"modal\"  (click)=\"onFormSubmit()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Id</th>\n                        <th>Market Name</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let m of markets\">\n                          <td>{{m.MarketId}}</td>\n                          <td>{{m.MarketName}}</td>\n                          <td>\n                              <button class=\"btn btn-danger\" (click)=\"deletMarket(m.MarketId)\">Delete</button>|\n                              <button class=\"btn btn-primary\"  data-toggle=\"modal\" data-target=\"#modelId\"    (click)=\"loadFrom(m.MarketId)\">Update</button>\n\n                          </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {OddsService} from '../../services/odds.service';\nimport {Event} from '../../Models/event';\nimport {BetTypeMarket} from '../../Models/betTypeMarket';\nimport {BetTypeMarketService} from '../../services/bet-type-market.service';\nimport {EventService} from '../../services/event.service';\nimport {IOdds} from '../../Models/odds';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {OddsVm} from '../../Models/ViewModels/OddsVm';\nimport { BetTypeVm } from 'src/app/Models/ViewModels/betTypeVm';\n\n@Component({\n  selector: 'app-odds',\n  templateUrl: './odds.component.html',\n  styleUrls: ['./odds.component.css']\n})\nexport class OddsComponent implements OnInit {\n\n  odds:OddsVm[];\n  oddsForm:any;\n  events:Event[];\n  selectedEvent:Event;\n  btMarkets:BetTypeVm[];\n  selectedBtm:BetTypeVm;\n  btmId:number;\n  eventId:number;\n  oddsUpdate:number;\n  singleOdd:OddsVm;\n\n\n  constructor(private eventServices:EventService,private btmServicce:BetTypeMarketService,\n              private formBuider:FormBuilder,private oddsService:OddsService) { }\n\n  ngOnInit(): void {\n    this.getOdds();\n    this.getEvents();\n    this.getBetTypeMarkets();\n    this.oddsUpdate=null;\n    this.oddsForm=this.formBuider.group({\n      Odds1:['',Validators.required]\n    });\n  }\n \n\n  getOdds(){\n    this.oddsService.getOdds().subscribe((data:any)=>{\n      this.odds=data;\n    });\n  }\n\n  getEvents(){\n    this.selectedEvent={\n      EventId:null,\n      EventName: 'Select Event',\n      EeventDate:null,\n      TournamentId:null\n    };\n    this.eventServices.getEvents().subscribe((data:any)=>{\n      this.events=data;\n    });\n  }\n\n  \n\n  getBetTypeMarkets(){\n    this.selectedBtm={\n      BetTypeId:null,\n      BetTypeMarketCode:'Select BTM Code',\n      BetTypeName:null,\n      BetTypeMarketId:null,\n      MarketId:null,\n      MarketName:null,\n    };\n    this.btmServicce.getBetTypeMarkets().subscribe((data:any)=>{\n      this.btMarkets=data;\n    });\n  }\n\n\n  addodds(odd:IOdds){\n    if(odd!=null && odd!=undefined){\n      console.log('OddsUpdate variable', this.oddsUpdate);\n      if(this.oddsUpdate==null){\n        odd.OddId=this.odds.length+1;\n        odd.EventId=this.eventId;\n        odd.BetTypeMarketId=this.btmId;\n        this.oddsService.addOdds(odd).subscribe((data:any)=>{\n            alert(data.text);\n            this.getOdds();\n            this.setHeading();\n        });\n      }\n      else{\n        odd.OddId=this.oddsUpdate;\n        odd.BetTypeMarketId=this.btmId;\n        odd.EventId=this.eventId;\n        // console.log('This is what i amm submiting', odd);\n\n        this.oddsService.updateOdd(odd).subscribe((data:any)=>{\n          if(data!=null){\n            this.getOdds();\n            this.oddsUpdate=null;\n            this.clearForm();\n            alert(data.text);\n          }\n        });\n      }\n    }\n  }\n\nloadOddsToEdit(oddId:number){\n  this.oddsUpdate=oddId;\n  this.oddsService.getSingleOdd(oddId).subscribe((data:any)=>{\n    this.singleOdd=data;\n    console.log('Odd found ',data)\n    this.oddsForm.controls['Odds1'].setValue(data[0].Odds1);\n    this.getSingleEvent(data[0].EventId);\n    this.getSIngleBTM(data[0].BetTypeMarketId);\n  });\n}\n\ngetSIngleBTM(bTmId:number){\n  console.log('submited Id', bTmId);\n  this.btmServicce.getSingleBetTypeMarkets(bTmId).subscribe((data:any)=>{\n    this.selectedBtm=data[0];\n    this.btmId=this.selectedBtm.BetTypeMarketId;\n    console.log('Btn found ',data);\n  });\n}\n\ngetSingleEvent(eventId){\n  this.eventServices.getSingleEvent(eventId).subscribe((data:any)=>{\n    this.selectedEvent=data[0];\n    this.eventId=this.selectedEvent.EventId;\n    console.log('event found ',data);\n  });\n}\n\n\n\n  \n\n\n\n  onFormSubmit(){\n    const formData=this.oddsForm.value;\n    console.log('This is what i amm submiting', formData)\n    this.addodds(formData);\n  }\n\n\n  getBtmID(btmID:any){\n    this.selectedBtm=btmID;\n    this.btmId=this.selectedBtm.BetTypeMarketId;\n    console.log('sunmited id' ,this.btmId);\n  }\n  \n  getEventId(eventId:any){\n    this.selectedEvent=eventId;\n    this.eventId=this.selectedEvent.EventId;\n    console.log('sunmited id' ,this.eventId);\n  }\n\n  delete(oddId:number){\n    if(window.confirm(\"Are you sure you want to delete record\")){\n      this.oddsService.deleteOdd(oddId).subscribe((data:any)=>{\n        alert(data.text);\n        this.getOdds();\n      });\n    }\n  }\n\n  clearForm(){\n    this.oddsForm.reset();\n  }\n\n  setHeading(){\n    this.oddsUpdate=null;\n    this.clearForm();\n  }\n\n}\n","<div class=\"container odds-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n\n            <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Add Odds For Event\n              </button>\n\n              <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Add Odds For Event</h5>\n\n                            <ng-template [ngIf]=\"oddsUpdate==null\">\n                                <h5 class=\"modal-title\">Add Odds For Event</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" click()=\"setHeading()\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </ng-template>\n\n                            <ng-template [ngIf]=\"oddsUpdate!=null\">\n                                <h5 class=\"modal-title\">Update Odds For Event</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" click()=\"setHeading()\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </ng-template>\n                         \n                        </div>\n                        <div class=\"modal-body\">\n                            <form  [formGroup]=\"oddsForm\">\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-4\">\n                                        <label for=\"Department Name\">Select BTM Code</label>\n                                         <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                    </div>\n                                    <div class=\"colo-md-8\" >\n                                         <div class=\"dropdown open\">\n                                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                                id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                                aria-expanded=\"false\">\n                                                {{selectedBtm.BetTypeMarketCode}}\n                                            </button>\n                                            <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\"  >\n                                                <button class=\"dropdown-item\" *ngFor=\"let btm of btMarkets\" (click)=\"getBtmID(btm)\">\n                                                    {{btm.BetTypeMarketCode}}</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-4\">\n                                        <label for=\"Country Name\">Select Event </label>\n                                         <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                    </div>\n                                    <div class=\"colo-md-8\" >\n                                        <div class=\"dropdown open\">\n                                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                                id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                                aria-expanded=\"false\">\n                                             {{selectedEvent.EventName}}\n                                            </button>\n                                            <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" >\n                                                <button class=\"dropdown-item\" *ngFor=\"let e of events\"\n                                                   (click)=\"getEventId(e)\" >{{e.EventName}}</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-4\">\n                                        <label for=\"Odds\">Odds </label>\n                                         <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                    </div>\n                                    <div class=\"colo-md-8\" >\n                                         <!-- <input type=\"text\" class=\"form-control\" placeholder=\"Odds \" formControlName=\"Odds1\"> -->\n                                         <input appcurrencyformatter=\"\"  value=\"\"\n                                         class=\"form-control stake-input-box input-sm ng-pristine ng-valid ng-touched spinner\"\n                                         min=\"1\" type=\"number\" formControlName=\"Odds1\">\n                                    </div>\n                                </div>\n                            </form>\n                        \n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setHeading()\">Close</button>\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onFormSubmit()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <table class=\"table table-striped\">\n                <thead > \n                    <tr>\n                        <th>Id</th>\n                        <th>BTM Code</th>\n                        <!-- <th>EventId</th> -->\n                        <th>Event Name</th>\n                        <th>Odds</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let od of odds\">\n                        <td>{{od.OddId}}</td>\n                        <!-- <td>{{od.BetTypeMarketId}}</td> -->\n                        <td>{{od.Bet_Market_Code}}</td>\n                        <!-- <td>{{od.EventId}}</td> -->\n                        <td>{{od.EventName}}</td>\n                        <td>{{od.Odds}}</td>\n                        <td>\n                            <button class=\"btn btn-danger\" (click)=\"delete(od.OddId)\">Delete</button>|\n\n                            <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modelId\" (click)=\"loadOddsToEdit(od.OddId)\">Update</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PrintermakeService} from '../../services/printermake.service'\nimport {Make} from '../../Models/PrinterMake';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-printermake',\n  templateUrl: './printermake.component.html',\n  styleUrls: ['./printermake.component.css']\n})\nexport class PrintermakeComponent implements OnInit {\n\n\n    makes:Make[]=[];\n    singleMake:Make;\n    makesForm:any;\n    makeUpdate:number;\n  constructor(private printerMakeService:PrintermakeService, private formBuilder: FormBuilder ) { }\n\n  ngOnInit(): void {\n    this.getAllMakes();\n    this.makesForm = this.formBuilder.group({\n      PrinterMake: ['', Validators.required]\n    });\n  }\n\n  getAllMakes(){\n    this.printerMakeService.getAllMakes().subscribe((data:any)=>{\n      this.makes=data;\n      console.log(this.makes);\n      this.makeUpdate=null;\n    });\n  }\n\n\n\n\n  //--------------------------------Add or Edit-----------------------------------------------------------\n  addPrinterMake(make: Make) {\n    if (make != undefined && make != null) {\n      if (this.makeUpdate == null) {\n        this.printerMakeService.addMake(make).subscribe((data: any) => {\n          if (data != null) {\n            this.getAllMakes();\n            this.clearForm();\n          }\n        });\n      }\n      else {\n        //TODO UPDATE MARKET\n        make.makeId = this.makeUpdate;\n        this.printerMakeService.updateMake(make).subscribe((data: any) => {\n          if (data != undefined || data != null) {\n            this.getAllMakes();\n            this.clearForm();\n            this.makeUpdate=null;\n          }\n        });\n      }\n    }\n  }\n  //--------------------------------Add or Edit-----------------------------------------------------------\n\n\n  //----------Delete Make----------------------------------------------\n  deletMake(makeId: number) {\n    if (window.confirm(\"Are you sure you want to delete record\")) {\n      this.printerMakeService.deleteMake(makeId).subscribe((data: any) => {\n        if (data != null || data != undefined) {\n          this.getAllMakes();\n        }\n      });\n    }\n  }\n\n  //----------Delete Make----------------------------------------------\n\n\n//-----------------load form to edit-----------------------\nloadFrom(makeId: number) {\n  this.makeUpdate = makeId;\n  this.printerMakeService.getSingleMake(makeId).subscribe((data: any) => {\n    console.log('I found this', data);\n    this.makesForm.controls['PrinterMake'].setValue(data.printerMake)\n  });\n}\n\n//-----------------load form to edit-----------------------\n  onFormSubmit() {\n    const formData = this.makesForm.value;\n    this.addPrinterMake(formData);\n  }\n\n\n  clearForm() {\n    this.makesForm.reset();\n  }\n\n  setaHeading(){\n    this.makeUpdate=null;\n    this.clearForm();\n  }\n\n\n}\n","<div class=\"container odds-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n\n            <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Add Printer Make\n              </button>\n\n              <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Add Printer Make</h5>\n\n                            <ng-template [ngIf]=\"makeUpdate==null\">\n                                <h5 class=\"modal-title\">Add Printer Make</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" click()=\"setaHeading()\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </ng-template>\n\n                            <ng-template [ngIf]=\"makeUpdate!=null\">\n                                <h5 class=\"modal-title\">Update Printer Make</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" click()=\"setaHeading()\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </ng-template>\n                         \n                        </div>\n                        <div class=\"modal-body\">\n                            <form  [formGroup]=\"makesForm\">\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-4\">\n                                        <label for=\"Odds\">Printer Make Name </label>\n                                         <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                    </div>\n                                    <div class=\"colo-md-8\" >\n                                        <input type=\"text\"   class=\"form-control\" id=\"PrinterMake\" placeholder=\"Printer Make\" formControlName=\"PrinterMake\">\n                                   </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setaHeading()\">Close</button>\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onFormSubmit()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <table class=\"table table-striped\">\n                <thead > \n                    <tr>\n                        <th>Id</th>\n                        <th>Printer Make</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let make of makes\">\n                        <td>{{make.makeId}}</td>\n                        <td>{{make.printerMake}}</td>\n                        <td>\n                            <button class=\"btn btn-danger\" (click)=\"deletMake(make.makeId)\">Delete</button>|\n\n                            <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modelId\" (click)=\"loadFrom(make.makeId)\">Update</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SportCountry } from '../../Models/SportCountry';\nimport { SportsCountryService } from 'src/app/services/sports-country.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Country } from 'src/app/Models/country';\nimport { Sport } from 'src/app/Models/sport';\nimport { SportTreeService } from 'src/app/services/sport-tree.service';\nimport { CountryService } from 'src/app/services/country.service';\nimport { SportCountryVm } from 'src/app/Models/ViewModels/sportCountryVm';\n\n\n@Component({\n  selector: 'app-sport-country',\n  templateUrl: './sport-country.component.html',\n  styleUrls: ['./sport-country.component.css']\n})\nexport class SportCountryComponent implements OnInit {\n  SportCountries: SportCountryVm[];\n  sportCountry: SportCountry;\n  sportCountryForm: any;\n  countries: Country[];\n  sports: Sport[];\n  sport: Sport;\n  country: Country;\n  Selectedcountry: Country;\n  Selectedsport: Sport;\n  sportId: number = null;\n  countryId: number = null;\n  dataFromForm: SportCountry;\n  updateOption:number;\n\n  constructor(private sportCountryService: SportsCountryService, private formBuilder: FormBuilder,\n    private sportService: SportTreeService, private countryService: CountryService) { }\n\n  ngOnInit(): void {\n    this.getSportCountry();\n    this.getCountries();\n    this.getSports();\n    this.sportCountryForm = this.formBuilder.group({\n    });\n  }\n\n  ngAfterContentChecked(){\n    // this.Selectedcountry={\n    //   CountryId:null,\n    //   CountryName:'Select Country',\n    //   Flag:null\n    // };\n  }\n  getSportCountry() {\n    this.sportCountryService.getSportCountries().subscribe((data: any) => {\n      this.SportCountries = data;\n      // console.log('Linked Ids', this.SportCountries);\n    });\n  }\n\n  addSportToCountry(sportCountry: SportCountry) {\n    if (sportCountry != undefined && sportCountry != null) {\n      if(this.updateOption==null){\n        this.sportCountryService.addSportToCountry(sportCountry).subscribe((data:any) => {\n          console.log(data);\n          alert(data.text);\n          this.getSportCountry();\n          this.sportId = null;\n          this.countryId = null;\n          this.changeHeading();\n        });\n      }\n      else{\n        sportCountry.CountryId=this.Selectedcountry.CountryId;\n        sportCountry.SportId=this.Selectedsport.SportId;\n        sportCountry.SportCountryId=this.updateOption;\n        // console.log('Update db with this', sportCountry);\n           this.sportCountryService.updateSportCountryLink(this.updateOption,sportCountry).subscribe((data:any)=>{\n            console.log(data.text);\n            alert(data.text);\n            this.getSportCountry();\n            this.changeHeading();\n           });\n      }\n   \n    }\n  }\n\n  removeSportFromCountr(sportCountryId: number) {\n    this.sportCountryService.deleteSportCountry(sportCountryId).subscribe(() => {\n      this.getSportCountry();\n    });\n  }\n\n  loadSportCountryToEdit(sportCountryId: number) {\n    this.sportCountryService.getSingleSportCountry(sportCountryId).subscribe((data) => {\n      this.sportCountry = data;\n    });\n  }\n\n  getSports() {\n    this.Selectedsport={\n      SportId:null,\n      Name:'Select Sport',\n      Logo:null\n    };\n    this.sportService.getSports().subscribe((data: any) => {\n      this.sports = data;\n      // console.log('Sports', this.sports);\n    });\n  }\n  getCountries() {\n    this.Selectedcountry={\n      CountryId:null,\n      CountryName: 'Select Country',\n      Flag:null\n    };\n    this.countryService.getCountries().subscribe((data: any) => {\n      this.countries = data;\n      // console.log('Country', this.countries);\n    });\n  }\n\n  unLinkSport(sortCountryId:number){\n    if(window.confirm(\"Are you sure you want to unlink sport with country\")){\n      this.sportCountryService.deleteSportCountry(sortCountryId).subscribe((data:any)=>{\n        this.getSportCountry();\n        alert(data.text);\n      });\n    }\n  \n  }\n\n  getReferenceCounrtry(){\n   this.countryService.getSingleCountry(this.countryId).subscribe((data:any)=>{\n     this.country=data;\n     this.Selectedcountry=data[0];\n    //  console.log('reference country',this.country);\n   });\n  }\n  getReferenceSPort(){\n    console.log('sportId',this.sportId);\n    this.sportService.getSIngleSport(this.sportId).subscribe((data:any)=>{\n      this.sport=data;\n      this.Selectedsport=data[0];\n      // console.log('reference sport', this.Selectedsport);\n    });\n  }\n\n  getSportId(sport: any) {\n    this.Selectedsport=sport\n    this.sportId = sport.SportId;\n    // console.log('sportId', this.sportId);\n    // console.log('sport for dropdown', this.Selectedsport);\n  }\n  getCountryId(country:any) {\n    this.Selectedcountry=country;\n    this.countryId = country.CountryId;\n    // console.log('countryId', this.countryId);\n    // console.log('country for dropdown',this.Selectedcountry);\n  }\n\n  onFormSubmit() {\n    this.getReferenceCounrtry();\n    this.getReferenceSPort();\n    this.dataFromForm = {\n      SportCountryId: this.SportCountries.length + 2,\n      SportId: this.sportId,\n      CountryId: this.countryId,\n      // Country: this.country,\n      // Sport: this.sport\n    }\n    // console.log('this is what i am adding ', this.dataFromForm);\n    this.addSportToCountry(this.dataFromForm);\n  }\n\n      loadFormToEdit(sportCountryId:number){\n        this.updateOption=sportCountryId;\n       this.sportCountryService.getSingleSportCountry(sportCountryId).subscribe((data:any)=>{\n         this.sportCountry=data;\n        //  console.log('Db record',this.sportCountry);\n         this.sportId=data[0].SportId;\n         this.countryId=data[0].CountryId;\n         this.getReferenceCounrtry();\n         this.getReferenceSPort();\n       });\n\n      }\n\n\n\n\n  changeHeading(){\n    this.Selectedcountry={\n      CountryId:null,\n      CountryName: 'Select Country',\n      Flag:null\n    };\n    this.Selectedsport={\n      SportId:null,\n      Name:'Select Sport',\n      Logo:null\n    }\n\n  }\n\n}\n","\n<div class=\"container sportCountry-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n    <!-- <h2>Manage Sport Counrty </h2> -->\n<!-- Button trigger modal -->\n<button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\">\n  Add New Link\n</button>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Link Sport With Country</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"changeHeading()\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n            </div>\n            <div class=\"modal-body\">\n                <form action=\"\" [formGroup]=\"sportCountryForm\">\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-4\">\n                            <label for=\"Department Name\">Select Sport</label>\n                             <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                        </div>\n                        <div class=\"colo-md-8\" >\n\n                             <div class=\"dropdown open\">\n                                <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                    id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                    aria-expanded=\"false\">\n                                    {{Selectedsport.Name}}\n                                </button>\n                                <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\"  >\n                                    <button class=\"dropdown-item\" *ngFor=\"let s of sports\" (click)=\"getSportId(s)\">\n                                        {{s.Name}}</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <div class=\"col-md-4\">\n                            <label for=\"Country Name\">Select Country </label>\n                             <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                        </div>\n                        <div class=\"colo-md-8\" >\n                            <div class=\"dropdown open\">\n                                <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                    id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                    aria-expanded=\"false\">\n                                    {{Selectedcountry.CountryName}}\n                                    <!-- Select Counrty -->\n                                </button>\n                                <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\">\n                                    <button class=\"dropdown-item\" *ngFor=\"let c of countries\"\n                                       (click)=\"getCountryId(c)\" >{{c.CountryName}}</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            \n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"changeHeading()\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onFormSubmit()\">Save</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n    <table class=\"table table-striped\">\n        <thead  >\n            <tr>\n                <th>Id</th>\n                <th>Sport</th>\n                <th>Country</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let sc of SportCountries\">\n                <td>{{sc.SportCountryId}}</td>\n                <td>{{sc.SportName}}</td>\n                <td>{{sc.CountryName}}</td>\n                <td>\n                    <button class=\"btn btn-primary btn-update\" (click)=\"loadFormToEdit(sc.SportCountryId)\" data-toggle=\"modal\" data-target=\"#modelId\">Update</button>|\n                    <button class=\"btn btn-danger\" (click)=\"unLinkSport(sc.SportCountryId)\">Unlink</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    \n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {SportTreeService} from '../../services/sport-tree.service';\nimport { Sport } from 'src/app/Models/sport';\n\n@Component({\n  selector: 'app-sport-crud',\n  templateUrl: './sport-crud.component.html',\n  styleUrls: ['./sport-crud.component.css']\n})\nexport class SportCrudComponent implements OnInit {\n\n  sports:Sport[]=[];\n  singleSport:Sport;\n  sportsForm:any;\n  sportUpdate:number;\n  constructor(private sportTreeService:SportTreeService,private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getSports();\n    this.sportsForm=this.formBuilder.group({\n      Name:['',Validators.required],\n      Logo:['',Validators.nullValidator]\n    })\n  }\n\n\n  getSports(){\n    this.sportTreeService.getSports().subscribe((data:any)=>{\n      this.sports=data;\n      console.log('sportsTree',this.sports)\n    });\n  }\n\n loadSportToEdit(sportId:number){\n   console.log('Submited Id ',sportId);\n   this.sportTreeService.getSIngleSport(sportId).subscribe((data:any)=>{\n     this.singleSport=data;\n     this.sportUpdate=sportId;\n     this.sportsForm.controls['Name'].setValue(data[0].Name);\n     this.sportsForm.controls['Logo'].setValue(data[0].Logo);\n   })\n }\n\n\n  addSport(sport:Sport){\n    if(sport!=undefined && sport!==null){\n      if(this.sportUpdate==null){\n        sport.SportId=this.sports.length+1;\n        this.sportTreeService.addSport(sport).subscribe((data:any)=>{\n          alert(data.text);\n          this.getSports();\n        this.setHeading();\n        });\n      }\n      else{\n          sport.SportId=this.sportUpdate;\n          this.updateSport(this.sportUpdate,sport);\n      }\n    }\n  }\n\n  deleteSport(sportId:number){\n    if(window.confirm(\"Are you sure you want to delete record\")){\n      this.sportTreeService.deleteSport(sportId).subscribe((data:any)=>{\n        alert(data.text);\n        this.getSports();\n        // console.log('inside Delete')\n      });\n    }\n\n  }\n\n  updateSport(sportId:number,sport:Sport){\n    this.sportTreeService.updateSport(sportId,sport).subscribe((data:any)=>{\n      alert(data.text);\n      this.getSports();\n      this.setHeading();\n    });\n  }\n\n\n\n\n  onFormSubmit(){\n    const sportData=this.sportsForm.value;\n    console.log('Data from form ',sportData);\n    this.addSport(sportData);\n  }\nclearForm(){\n  this.sportsForm.reset();\n}\n  setHeading(){\n    this.sportUpdate=null;\n    this.clearForm();\n  }\n\n}\n","<div class=\"container sport-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n\n            <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\">\n                <!-- <i class=\"fa fa fa-plus\"></i> -->\n                Add New\n            </button>\n\n            <!-- Modal -->\n            <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <ng-template [ngIf]=\"sportUpdate==null\">\n                                <h5 class=\"modal-title\">Add Sport</h5>\n                            </ng-template>\n                            <ng-template [ngIf]=\"sportUpdate!=null\">\n                                <h5 class=\"modal-title\">Update Sport</h5>\n                            </ng-template>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"setHeading()\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form action=\"\" [formGroup]=\"sportsForm\">\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-4\">\n                                        <label for=\"Sport Name\">Sport Name</label>\n                                    </div>\n                                    <div class=\"colo-md-8\">\n                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Sport Name\" Name=\"Name\" formControlName=\"Name\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-4\">\n                                        <label for=\"Sport Logo\">Sport Logo</label>\n                                    </div>\n                                    <div class=\"colo-md-8\">\n                                        <input type=\"text\"    class=\"form-control\"  placeholder=\"Sport Logo\" Name=\"Logo\" formControlName=\"Logo\">\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setHeading()\">Close</button>\n                            <button type=\"submit\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                                (click)=\"onFormSubmit()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <table class=\"table table-striped\">\n                <thead class=\"text-black\" >\n                    <tr>\n                        <th>Sport Id</th>\n                        <th>Sport Name</th>\n                        <th>Sport Logo</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                   \n                    <tr *ngFor=\"let sport of sports\">\n                        <td>{{sport.SportId}}</td>\n                        <td>{{sport.Name}}</td>\n                        <td>\n                            <div class=\"card\" style=\"height: 50px !important; background-color: purple !important; width: 30% !important;\">\n                                <img class=\"card-img-top\" src=\"{{sport.Logo}}\" alt=\"Logo Not Available\" style=\"height: 50px !important;\">\n                                <div class=\"card-body\">\n                                    <!-- <h4 class=\"card-title\">Title</h4>\n                                    <p class=\"card-text\">Text</p> -->\n                                </div>\n                            </div>\n                            <!-- <img src=\"{{sport.Logo}}\" alt=\"Logo Not Available\"> -->\n                        </td>\n                        <td>\n\n                            \n                            <button type=\"button\" class=\"btn btn-danger\"\n                                (click)=\"deleteSport(sport.SportId)\">Delete</button> |\n                            <button type=\"button\" class=\"btn btn-primary btn-update\"   data-toggle=\"modal\" data-target=\"#modelId\" \n                             (click)=\"loadSportToEdit(sport.SportId)\">Update</button>\n                        </td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Sport } from '../../Models/sport';\nimport { Country } from '../../Models/country';\nimport { Tournament } from '../../Models/tournament';\nimport { SportTournament } from '../../Models/sportTournament';\nimport { SportTournamentService } from '../../services/sport-tournament.service';\nimport { FormBuilder } from '@angular/forms';\nimport { SportTreeService } from 'src/app/services/sport-tree.service';\nimport { TournamentService } from 'src/app/services/tournament.service';\nimport { CountryService } from 'src/app/services/country.service';\nimport { SportTournamentVm } from '../../Models/ViewModels/SportTournament';\n\n@Component({\n  selector: 'app-sport-tournament',\n  templateUrl: './sport-tournament.component.html',\n  styleUrls: ['./sport-tournament.component.css']\n})\nexport class SportTournamentComponent implements OnInit {\n\n  sportTournaments: SportTournamentVm[];\n  sports: Sport[];\n  tournaments: Tournament[];\n  Selectedtournament: Tournament;\n  countries: Country[];\n  sportTournament: SportTournament;\n  sport: Sport;\n  Selectedsport: Sport;\n  country: Country;\n  Selectedcountry: Country;\n  sportId: number\n  countryId: number;\n  tournamentId: number;\n  sportTournamenteForm: any;\n  sportTournamentData: SportTournament;\n  sportTournamentUpdate: number;\n\n  constructor(private sportTournamentService: SportTournamentService, private formBuilder: FormBuilder,\n    private sportService: SportTreeService, private tournamentService: TournamentService, private countryService: CountryService) { }\n\n  ngOnInit(): void {\n    this.getSporTournaments();\n    this.getTournaments();\n    this.getCountries();\n    this.getSports();\n    this.sportTournamenteForm = this.formBuilder.group({\n\n    });\n  }\n\n  getSports() {\n    this.Selectedsport={\n      SportId:null,\n      Name:'Select Sport',\n      Logo:null\n    }\n    this.sportService.getSports().subscribe((data: any) => {\n      this.sports = data;\n    });\n  }\n  getTournaments() {\n    this.Selectedtournament = {\n      TournamentId: null,\n      Name: 'Select Tournament',\n    }\n    this.tournamentService.getTournaments().subscribe((data: any) => {\n      this.tournaments = data;\n    });\n  }\n  getCountries() {\n    this.Selectedcountry={\n      CountryId:null,\n      CountryName:'Select Country',\n      Flag:null\n    }\n    this.countryService.getCountries().subscribe((data: any) => {\n      this.countries = data;\n    });\n  }\n\n  getSporTournaments() {\n    this.sportTournamentService.getSportTournaments().subscribe((data: any) => {\n      this.sportTournaments = data;\n      // console.log('sportTournaments', this.sportTournaments);\n    });\n  }\n\n  addSportsTournaments(sportTournament: SportTournament) {\n\n    if (sportTournament != undefined && sportTournament != null) {\n      if (this.sportTournamentUpdate == null) {\n        this.sportTournamentService.addSportTournament(sportTournament).subscribe((data:any) => {\n          this.getSporTournaments();\n          alert(data.text);\n        });\n      }\n      else {\n        // console.log('sportUpdateId', this.sportTournamentUpdate)\n        sportTournament.SportTourtnamentId=this.sportTournamentUpdate;\n        sportTournament.CountryId=this.Selectedcountry.CountryId;\n        sportTournament.SportId=this.Selectedsport.SportId;\n        sportTournament.TournamentId=this.Selectedtournament.TournamentId;\n        this.updateLink(this.sportTournamentUpdate, sportTournament);\n\n      }\n\n    }\n  }\n\n  removeLink(sportTournamentId: number) {\n    if (window.confirm(\"Are you sure you want to remove the link\")) {\n      this.sportTournamentService.deleteSportTournament(sportTournamentId).subscribe((data:any) => {\n        this.getSporTournaments();\n        alert(data.text);\n      });\n    }\n\n  }\n  updateLink(sportTournamentId: number, sportTournament: SportTournament) {\n    this.sportTournamentService.updateSportTournament(sportTournamentId, sportTournament).subscribe((data:any) => {\n     console.log(data);\n      this.getSporTournaments();\n      this.sportTournamentUpdate = null;\n      alert(data.text);\n    });\n  }\n\n  loadSportTournament(sportTournamentId: number) {\n    this.sportTournamentUpdate=sportTournamentId;\n    this.sportTournamentService.getSingleAssociation(sportTournamentId).subscribe((data: any) => {\n      this.sportTournament = data;\n      // console.log('Edit this record',data);\n      this.getDataForDropdown(data[0].SportId,data[0].TournamentId,data[0].CountryId);\n    });\n  }\n\n  getSportId(sport: any) {\n    this.Selectedsport=sport;\n    this.sportId = sport.SportId;\n    // console.log('submited sportId', this.Selectedsport);\n  }\n  getCountryId(country: any) {\n    this.Selectedcountry=country;\n    this.countryId = country.CountryId;\n    // console.log('submited country', this.Selectedcountry)\n  }\n  getTournamentId(tournament: any) {\n    // console.log('submited tournament', tournament);\n    this.Selectedtournament = tournament;\n    this.tournamentId = tournament.TournamentId;\n  }\n\n  onFormSubmit() {\n    this.sportTournamentData = {\n      SportTourtnamentId: this.sportTournaments.length + 1,\n      SportId: this.sportId,\n      CountryId: this.countryId,\n      TournamentId: this.tournamentId\n    };\n    this.addSportsTournaments(this.sportTournamentData);\n  }\n\n  updateLinkClick(sportTournamentId: number) {\n    this.sportTournamentUpdate = sportTournamentId;\n  }\n\n\n  getDataForDropdown(sportId:number,tournamentId:number,countryId:number){\n    // console.log('TournamentId passed',tournamentId)\n    this.sportService.getSIngleSport(sportId).subscribe((data:any)=>{\n      this.Selectedsport=data[0];\n    });\n    this.countryService.getSingleCountry(countryId).subscribe((data:any)=>{\n      this.Selectedcountry=data[0];\n    });\n\n    this.tournamentService.getSingleTournament(tournamentId).subscribe((data:any)=>{\n      this.Selectedtournament=data[0];\n      // console.log('Tournament To Edit',data[0]);\n    });\n  }\n\n\n  setHeading(){\n    this.Selectedtournament = {\n      TournamentId: null,\n      Name: 'Select Tournament',\n    };\n    this.Selectedsport={\n      SportId:null,\n      Name:'Select Sport',\n      Logo:null\n    };\n    this.Selectedcountry={\n      CountryId:null,\n      CountryName:'Select Country',\n      Flag:null\n    };\n    this.sportTournamentUpdate=null;\n  }\n\n}\n","<div class=\"container sporttournament-container\">\n    <div class=\"row mt-2\">\n        <!-- <h2>Manage Tournament Link</h2> -->\n        <div class=\"col-md-12\">\n<!-- Button trigger modal -->\n<button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\">\n    Add New Link\n  </button>\n  \n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                  <ng-template [ngIf]=\"Selectedsport.SportId==null\">\n                    <h5 class=\"modal-title\">Link Sport With Country</h5>\n                  </ng-template>\n                  <ng-template [ngIf]=\"Selectedsport.SportId!=null\">\n                    <h5 class=\"modal-title\">Update Link</h5>\n\n                  </ng-template >\n                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"setHeading()\">\n                          <span aria-hidden=\"true\">&times;</span>\n                      </button>\n              </div>\n              <div class=\"modal-body\">\n                  <form action=\"\" [formGroup]=\"sportTournamenteForm\">\n                      <div class=\"form-group row\">\n                          <div class=\"col-md-4\">\n                              <label for=\"Department Name\">Select Sport</label>\n                               <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                          </div>\n                          <div class=\"colo-md-8\" >\n                            <div class=\"dropdown open\">\n                                <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                    id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                    aria-expanded=\"false\">\n                                    {{Selectedsport.Name}}\n                                </button>\n                                <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\"  >\n                                    <button class=\"dropdown-item\" *ngFor=\"let s of sports\" (click)=\"getSportId(s)\">\n                                        {{s.Name}}</button>\n                                </div>\n                            </div>\n                          </div>\n                      </div>\n                      <div class=\"form-group row\">\n                          <div class=\"col-md-4\">\n                              <label for=\"Country Name\">Select Country </label>\n                               <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                          </div>\n                          <div class=\"colo-md-8\" >\n                              <div class=\"dropdown open\">\n                                  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                      id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                      aria-expanded=\"false\">\n                                      \n                                      {{Selectedcountry.CountryName}}\n                                  </button>\n                                  <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\">\n                                      <button class=\"dropdown-item\" *ngFor=\"let c of countries\"\n                                         (click)=\"getCountryId(c)\" >{{c.CountryName}}</button>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                      <div class=\"form-group row\">\n                          <div class=\"col-md-4\">\n                              <label for=\"Country Name\">Select Tournament </label>\n                               <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                          </div>\n                          <div class=\"colo-md-8\" >\n                              <div class=\"dropdown open\">\n                                  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                      id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                      aria-expanded=\"false\">\n                                      <!-- Select Tournament -->\n                                      {{Selectedtournament.Name}}\n                                  </button>\n                                  <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\" style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\">\n                                      <button class=\"dropdown-item\" *ngFor=\"let t of tournaments\"\n                                         (click)=\"getTournamentId(t)\" >{{t.Name}}</button>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </form>\n              \n              </div>\n              <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setHeading()\">Close</button>\n                  <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onFormSubmit()\">Save</button>\n              </div>\n          </div>\n      </div>\n  </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <table class=\"table table-striped\">\n                <thead style=\"color: black !important;\" >\n                    <tr>\n                        <th>Id</th>\n                        <th>Sport Name</th>\n                        <th>Country Name</th>\n                        <th>Tournament Name</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let st of sportTournaments\">\n                        <td>{{st.SportTourtnamentId}}</td>\n                        <td>{{st.SportName}}</td>\n                        <td>{{st.CountryName}}</td>\n                        <td>{{st.TournamentName}}</td>\n                        <td>\n                            <button class=\"btn btn-primary \" data-toggle=\"modal\" data-target=\"#modelId\" (click)=\"loadSportTournament(st.SportTourtnamentId)\">Update</button>|\n                            <button class=\"btn btn-danger\" (click)=\"removeLink(st.SportTourtnamentId)\">UnLink</button> \n                        \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            \n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TournamentBetType } from '../../Models/tournamentBetType';\nimport { importType } from '@angular/compiler/src/output/output_ast';\nimport { Tournament } from '../../Models/tournament';\nimport { BetType } from '../../Models/betType';\nimport { BettypeService } from '../../services/bettype.service';\nimport { TournamentBettypeService } from '../../services/tournament-bettype.service';\nimport { TournamentService } from '../../services/tournament.service';\nimport { FormBuilder } from '@angular/forms/';\nimport { throwIfEmpty } from 'rxjs/operators';\nimport { TournamentBetTypeVm } from 'src/app/Models/ViewModels/tournamentBetTypeVm';\n@Component({\n  selector: 'app-tournament-bettype',\n  templateUrl: './tournament-bettype.component.html',\n  styleUrls: ['./tournament-bettype.component.css']\n})\nexport class TournamentBettypeComponent implements OnInit {\n\n  tournaments: Tournament[];\n  tournament: Tournament;\n  selectedtournament: Tournament;\n  tournamentAssociations: TournamentBetTypeVm[];\n  tournamentAssociation: TournamentBetType;\n  betTypes: BetType[];\n  betType: BetType;\n  selectedbetType: BetType;\n  tournamentAssociationForm: any;\n  tournamentId: number;\n  betTypeId: number;\n  localFormData:TournamentBetType;\n  tournamentUpdate:number=null;\n\n  constructor(private betTypeService: BettypeService, private tournamentBettypeService: TournamentBettypeService\n    , private tournamentService: TournamentService, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getAssociations();\n    this.getTournaments();\n    this.getBetTypes();\n    this.tournamentAssociationForm=this.formBuilder.group({});\n\n  }\n\n  getTournaments() {\n    this.selectedtournament={\n      TournamentId:null,\n      Name:'Selected Tournament',\n    };\n    this.tournamentService.getTournaments().subscribe((data: any) => {\n      this.tournaments = data;\n    });\n  }\n  getBetTypes() {\n    this.selectedbetType={\n      BetTypeId:null,\n      BetTypeName:'Select Bet Type'\n    };\n    this.betTypeService.getBeTypes().subscribe((data: any) => {\n      this.betTypes = data;\n    });\n  }\n  getAssociations() {\n    this.tournamentBettypeService.getTournamentBettypes().subscribe((data: any) => {\n      this.tournamentAssociations = data;\n      console.log('data', data)\n    });\n  }\n\n  addLink(tournmentBetType: TournamentBetType) {\n    if (tournmentBetType != undefined && tournmentBetType != null) {\n      if(this.tournamentUpdate==null){\n        this.tournamentBettypeService.addAssociation(tournmentBetType).subscribe((data:any) => {\n          if(data!=undefined){\n            this.getAssociations();\n            this.tournamentId=null;\n            this.betTypeId=null;\n            this.tournamentUpdate=null;\n            this.setHeading();\n          }\n        });\n      }\n      else{\n        tournmentBetType.BetTypeId=this.selectedbetType.BetTypeId;\n        tournmentBetType.TournamentId=this.selectedtournament.TournamentId;\n        tournmentBetType.TbTid=this.tournamentUpdate;\n        this.updatezlink(this.tournamentUpdate,tournmentBetType);\n      }\n  \n    }\n  }\n  updatezlink(tbTId:number,tournamentBetType:TournamentBetType){\n     this.tournamentBettypeService.updateLink(tbTId,tournamentBetType).subscribe(data=>{\n       if(data!=null || data!=undefined){\n         this.getAssociations();\n         this.tournamentUpdate=null;\n         this.setHeading();\n       }\n     })\n\n  }\n  removeLink(tBtId: number) {\n    if(window.confirm(\"Are you sure you want to remove the linking\")){\n      this.tournamentBettypeService.deleteLink(tBtId).subscribe((data) => {\n        if(data!=undefined){\n          this.getAssociations();\n          console.log('Api result ',data);\n        }\n      });\n    }\n  \n  }\n  getTournamentId(tournament: any) {\n    this.selectedtournament=tournament;\n    this.tournamentId = tournament.TournamentId;\n    console.log('submited id',this.tournamentId );\n  }\n  getBetTypeId(betType: any) {\n    this.selectedbetType=betType;\n    this.betTypeId = betType.BetTypeId;\n    console.log('submited id',this.betTypeId );\n\n  }\n  onSubmitForm(){\n  this.localFormData={\n    TbTid:this.tournamentAssociations.length+1,\n    TournamentId:this.tournamentId,\n    BetTypeId:this.betTypeId\n   };\n   this.addLink(this.localFormData);\n  }\n  setUpdate(tbtId:number){\n    this.tournamentUpdate=tbtId;\n    this.tournamentBettypeService.getSingleAssociation(tbtId).subscribe((data:any)=>{\n      this.loadDataForUpdate(data[0].BetTypeId,data[0].TournamentId);\n    });\n  }\n\n     loadDataForUpdate(betTyepeId:number,tournamentId:number){\n       console.log('TournamentId', tournamentId);\n       this.betTypeService.getSingleBetType(betTyepeId).subscribe((data:any)=>{\n         this.selectedbetType=data[0];\n         console.log('BetType from db',data);\n       });\n\n       this.tournamentService.getSingleTournament(tournamentId).subscribe((data:any)=>{\n         this.selectedtournament=data[0];\n         console.log('Tournament from db',data);\n       });\n     }\n      \n    setHeading(){\n      this.selectedtournament={\n        TournamentId:null,\n        Name:'Selected Tournament',\n      };\n      this.selectedbetType={\n        BetTypeId:null,\n        BetTypeName:'Select Bet Type'\n      };\n      this.tournamentUpdate=null;\n    }\n}\n","<div class=\"container tournamentBetType-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n\n\n            <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Add New Link\n            </button>\n\n            <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\"\n                aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <ng-template [ngIf]=\"tournamentUpdate==null\">\n                                <h5 class=\"modal-title\">Link Tournament</h5>\n\n                            </ng-template>\n                            <ng-template [ngIf]=\"tournamentUpdate!=null\">\n                                <h5 class=\"modal-title\">Update Link</h5>\n                            </ng-template>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"setHeading()\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form action=\"\" [formGroup]=\"tournamentAssociationForm\">\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-4\">\n                                        <label for=\"Department Name\">Select Tournament</label>\n                                        <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                    </div>\n                                    <div class=\"colo-md-8\">\n                                        <div class=\"dropdown open\">\n                                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                                id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                                aria-expanded=\"false\">\n                                                {{selectedtournament.Name}}\n                                            </button>\n                                            <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\"\n                                                style=\"height: 200px !important; min-width: 50% !important; overflow-x: hidden !important;\">\n                                                <button class=\"dropdown-item\" *ngFor=\"let t of tournaments\"\n                                                    (click)=\"getTournamentId(t)\">\n                                                    {{t.Name}}</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-4\">\n                                        <label for=\"Country Name\">Select Bet Type </label>\n                                        <!-- <input type=\"text\" placeholder=\"Country Name\" formControlName=\"CountryName\"> -->\n                                    </div>\n                                    <div class=\"colo-md-8\">\n                                        <div class=\"dropdown open\">\n                                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                                id=\"triggerId\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                                aria-expanded=\"false\">\n                                                {{selectedbetType.BetTypeName}}\n                                            </button>\n                                            <div class=\"dropdown-menu\" aria-labelledby=\"triggerId\">\n                                                <button class=\"dropdown-item\" *ngFor=\"let bt of betTypes\"\n                                                    (click)=\"getBetTypeId(bt)\">{{bt.BetTypeName}}</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setHeading()\">Close</button>\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\n                                (click)=\"onSubmitForm()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <table class=\"table table-striped\">\n                <thead >\n                    <tr>\n                        <th>Id</th>\n                        <th>Tournament Name</th>\n                        <th>BetType Name</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let t of tournamentAssociations\">\n                        <td>{{t.TbTid}}</td>\n                        <td>{{t.TournamentName}}</td>\n                        <td>{{t.BetTypeName}}</td>\n                        <td>\n                            <button class=\"btn btn-primary \" data-toggle=\"modal\" data-target=\"#modelId\"\n                                (click)=\"setUpdate(t.TbTid)\">Update</button> |\n                            <button class=\"btn btn-danger\" (click)=\"removeLink(t.TbTid)\">UnLink</button>\n                        </td>\n\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tournament-event',\n  templateUrl: './tournament-event.component.html',\n  styleUrls: ['./tournament-event.component.css']\n})\nexport class TournamentEventComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tournament-event works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {Tournament} from '../../models/tournament';\nimport { from } from 'rxjs';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TournamentService } from 'src/app/services/tournament.service';\n\n@Component({\n  selector: 'app-tournaments-crud',\n  templateUrl: './tournaments-crud.component.html',\n  styleUrls: ['./tournaments-crud.component.css']\n})\nexport class TournamentsCrudComponent implements OnInit {\n\n  tournamentForm:any;\n  tournaments:Tournament[];\n  tournament:Tournament;\n  tournamentUpdate:number;\n  constructor( private tournamentService:TournamentService, private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getTournaments();\n    this.tournamentForm=this.formBuilder.group({\n      Name:['',[Validators.required]]\n    });\n  }\n\n  deleteTournament(tournamentId:number){\n    if((window.confirm(\"Are you sure you want to delete this record\"))){\n      this.tournamentService.deleteTournament(tournamentId).subscribe(()=>{\n        this.getTournaments();\n      });\n      this.getTournaments();\n    }\n   \n  }\n\n  addTournament(tournament:Tournament){\n    if(tournament!=undefined || tournament!=null){\n      if(this.tournamentUpdate==null){\n        tournament.TournamentId=this.tournaments.length+1;\n        // console.log('data submited',tournament)\n        this.tournamentService.addTournamen(tournament).subscribe(()=>{\n          this.getTournaments();\n          this.clearForm();\n        });\n      }\n      else{\n          tournament.TournamentId=this.tournamentUpdate;\n          // console.log('New Updated Record', tournament);\n          this.tournamentService.updateTournament(this.tournamentUpdate,tournament).subscribe((data:any)=>{\n            this.getTournaments();\n              this.setHeading();\n          });\n      }\n    \n    }\n  }\n\n\n  loadTournamentToEdit(tournamentId:number){\n    // console.log('submited Id', tournamentId);\n    this.tournamentUpdate=tournamentId;\n    this.tournamentService.getSingleTournament(tournamentId).subscribe((data:any)=>{\n      this.tournament=data;\n      this.tournamentForm.controls['Name'].setValue(data[0].Name);\n    });\n  }\n  getTournaments(){\n    this.tournamentService.getTournaments().subscribe((data:any)=>{\n      this.tournaments=data;\n      console.log(data);\n    });\n  }\n  //end\n  onFormSubmit(){\n    const tournamentData=this.tournamentForm.value;\n    this.addTournament(tournamentData);\n    return tournamentData;\n  }\n\n  clearForm(){\n    this.tournamentForm.reset();\n  }\n\n  setHeading(){\n    this.tournamentUpdate=null;\n    this.clearForm();\n  }\n}\n","<div class=\"container tournament-container\">\n    <div class=\"row mt-2\">\n        <div class=\"col-md-12\">\n\n                 <!-- Button trigger modal -->\n                 <button type=\"button\" class=\"btn btn-primary btn-add\" data-toggle=\"modal\" data-target=\"#modelId\">\n                   Add Tournaments\n                 </button>\n                 \n                 <!-- Modal -->\n                 <div class=\"modal fade\" id=\"modelId\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n                     <div class=\"modal-dialog\" role=\"document\">\n                         <div class=\"modal-content\">\n                             <div class=\"modal-header\">\n                                 <ng-template [ngIf]=\"tournamentUpdate==null\">\n                                    <h5 class=\"modal-title\">Add Tournament</h5>\n\n                                 </ng-template>\n                                 <ng-template [ngIf]=\"tournamentUpdate!=null\">\n                                 <h5 class=\"modal-title\">Update Tournament</h5>\n                                 </ng-template>\n                                     <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"setHeading()\">\n                                         <span  aria-hidden=\"true\" class=\"closeX\">&times;</span>\n                                     </button>\n                             </div>\n                             <div class=\"modal-body\">\n                                <form action=\"\" [formGroup]=\"tournamentForm\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-4\">\n                                            <label for=\"Tournament Name\">Tournament Name</label>\n                                             <!-- <input type=\"text\" placeholder=\"Department Name\" formControlName=\"deparmentName\"> -->\n                                        </div>\n                                        <div class=\"colo-md-8\" >\n                                             <input type=\"text\" placeholder=\"Tournament Name\"  Name=\"Name\" formControlName=\"Name\">\n                                        </div>\n                                    </div>\n                                </form>\n                             </div>\n                             <div class=\"modal-footer\">\n                                 <button type=\"button\" class=\"btn btn-secondary btn-modal-dismis\" data-dismiss=\"modal\" (click)=\"setHeading()\">Close</button>\n                                 <button type=\"submit\" class=\"btn btn-primary\"  data-dismiss=\"modal\"  (click)=\"onFormSubmit()\">Save</button>\n                             </div>\n                         </div>\n                     </div>\n                 </div>\n\n\n            <table class=\"table table-striped\">\n                <thead></thead>\n                <tbody>\n                    <tr>\n                        <th> Id</th>\n                        <th>Tournament Name</th>\n                        <th>Actions</th>\n                    </tr>\n                    <tr *ngFor=\"let tournament of tournaments\">\n                        <td>{{tournament.TournamentId}}</td>\n                        <td>{{tournament.Name}}</td>\n                        <td>\n                            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteTournament(tournament.TournamentId)\">Delete</button>|\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"loadTournamentToEdit(tournament.TournamentId)\" data-toggle=\"modal\" data-target=\"#modelId\">\n                                Update</button>\n                        </td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </table>\n            \n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {BetTypeMarket} from '../Models/betTypeMarket';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport {BetTypeVm} from '../Models/ViewModels/betTypeVm';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BetTypeMarketService {\n\n  rootUrl=environment.sportsApiUrl;\n  param='BetTypeMarkets';\n  paramGet='/GetAll';\n  peramId='?betTypeMarketId=';\n  constructor(private http:HttpClient,private errorHandlerService: ErrorhandlerService) { }\n\n  getBetTypeMarkets():Observable<BetTypeVm[]>{\n    return this.http.get<BetTypeVm[]>(`${this.rootUrl}${this.param}${this.paramGet}`)\n    .pipe(catchError(this.errorHandlerService.handleError));\n  }\n  \n  getSingleBetTypeMarkets(betTypeMarketId:number):Observable<BetTypeVm>{\n    return this.http.get<BetTypeVm>(`${this.rootUrl}${this.param}${this.peramId}${betTypeMarketId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  addAssociation(betTypeMarket:BetTypeMarket){\n    return this.http.post(`${this.rootUrl}${this.param}`,betTypeMarket)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  deleteAssociation(betTypeMarketId:number){\n    return this.http.delete(`${this.rootUrl}${this.param}${this.peramId}${betTypeMarketId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  updateAssociations(betTypeMarketId:number,betTypeMarket:BetTypeMarket){\n    return this.http.put(`${this.rootUrl}${this.param}${this.peramId}${betTypeMarketId}`,betTypeMarket)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BetType } from '../Models/betType';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BettypeService {\n\n  rootUrl=environment.sportsApiUrl;\n  param='BetTypes';\n  paramGet='/GetAll';\n  betTypeId='?betTypeId=';\n  constructor(private http:HttpClient,private errorHandlerService: ErrorhandlerService) { }\n\n  getBeTypes():Observable<BetType[]>\n  {\n    return this.http.get<BetType[]>(`${this.rootUrl}${this.param}${this.paramGet}`)\n    .pipe(catchError(this.errorHandlerService.handleError));\n  }\n\n  getSingleBetType(betTypeId:number):Observable<BetType>{\n    return this.http.get<BetType>(`${this.rootUrl}${this.param}${this.betTypeId}${betTypeId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  addBetType(betType:BetType){\n    return this.http.post(`${this.rootUrl}${this.param}`,betType)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  updateBetType(betTypeId:number,betType:BetType){\n    return this.http.put(`${this.rootUrl}${this.param}${this.betTypeId}${betTypeId}`,betType)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n  deleteBetType(betTypeId:number){\n    return this.http.delete(`${this.rootUrl}${this.param}${this.betTypeId}${betTypeId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, pipe } from 'rxjs';\nimport { Country } from '../Models/country'\nimport { environment } from 'src/environments/environment';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\n\n  rootUrl = environment.sportsApiUrl;\n  param = 'countries'\n  param2='/getAll';\n  paramsingle='/GetSingleCountry'\n  Countryid = '?countryId=';\n\n  private httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n\n  constructor(private http: HttpClient,private errorHandlerService: ErrorhandlerService) { }\n  \n  getCountries(): Observable<Country[]> {\n    return this.http.get<Country[]>(`${this.rootUrl}${this.param}${this.param2}`)\n    .pipe(catchError(this.errorHandlerService.handleError));\n  }\n\n  addCountry(country:Country):Observable<any>{\n    return this.http.post<any>(`${this.rootUrl}${this.param}`,country,this.httpOptions)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n  deleteCountry(countryId:number):Observable<any>{\n    return this.http.delete(`${this.rootUrl}${this.param}${this.Countryid}${countryId}`,this.httpOptions)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  updateCountry(countryId,country:Country):Observable<any>{\n    return this.http.put(`${this.rootUrl}${this.param}${this.Countryid}${countryId}`,country,this.httpOptions)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  getSingleCountry(countryId:number):Observable<Country>{\n    return this.http.get<Country>(`${this.rootUrl}${this.param}${this.paramsingle}${this.Countryid}${countryId}`,this.httpOptions)\n    pipe(catchError(this.errorHandlerService.handleCrudError));\n  }\n  \n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorhandlerService {\n\n  constructor() { }\n  handleError(error: HttpErrorResponse) {\n    console.log(error);\n    // return of([]);\n\n    if(error.status==200 ){\n      console.log(error);\n      return of([]);\n    }\n    else if(error.status==404){\n      console.log(error);\n      return of([{Status:\"No record was found\"}]);\n    }\n    else{\n      console.log(error);\n      return of([{error}]);\n    }\n\n  }\n\n  handleCrudError(error:HttpErrorResponse){\n    // return of(error);\n    return of(error.error)\n    console.log('Erro status',error.message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Event} from '../Models/event';\nimport {HttpClient} from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport {ErrorhandlerService} from '../services/errorhandler.service';\nimport { Observable } from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport { EventVm } from '../Models/ViewModels/eventVm';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  rootUrl=environment.sportsApiUrl;\n  param='Events';\n  paramGet='/GetAll'\n  eventId='?eventId='\n  constructor(private http:HttpClient,private errorHandler:ErrorhandlerService) { }\n\n  getEvents():Observable<EventVm[]>{\n    return this.http.get<EventVm[]>(`${this.rootUrl}${this.param}${this.paramGet}`)\n    .pipe(catchError(this.errorHandler.handleError));\n  }\n\n  getSingleEvent(eventId:number):Observable<Event>{\n  return  this.http.get<Event>(`${this.rootUrl}${this.param}${this.eventId}${eventId}`)\n  .pipe(\n    map((data:any)=>{\n      return data;\n    }),\n    catchError(this.errorHandler.handleCrudError)\n  );\n  }\n\n  addEvent(event:Event){\n    return this.http.post(`${this.rootUrl}${this.param}`,event)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandler.handleCrudError)\n    );\n  }\n\n  updateEvent(eventId:number,event:Event){\n   return this.http.put(`${this.rootUrl}${this.param}${this.eventId}${eventId}`,event)\n   .pipe(\n    map((data:any)=>{\n      return data;\n    }),\n    catchError(this.errorHandler.handleCrudError)\n  );\n  }\n  deleteEvent(eventId:number){\n    return this.http.delete(`${this.rootUrl}${this.param}${this.eventId}${eventId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandler.handleCrudError)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Market} from '../Models/market';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarketService {\n  rootUrl=environment.sportsApiUrl;\n  param='Markets';\n  paramGet='/GetAll';\n  paramSingle='/GetSingle';\n  marketId='?marketId=';\n\n  constructor(private http:HttpClient,private errorHandlerService: ErrorhandlerService) { }\n\n\n  \n  getMarkets():Observable<Market[]>{\n    return this.http.get<Market[]>(`${this.rootUrl}${this.param}${this.paramGet}`)\n    .pipe(catchError(this.errorHandlerService.handleError));\n  }\n\n  getSingleMarket(marketId:number):Observable<Market>{\n    return this.http.get<Market>(`${this.rootUrl}${this.param}${this.paramSingle}${this.marketId}${marketId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  addMarket(market:Market){\n    return this.http.post(`${this.rootUrl}${this.param}`,market)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n  deleteMarket(marketId:number){\n    return this.http.delete(`${this.rootUrl}${this.param}${this.marketId}${marketId}`) .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  updateMarket(marketId:number,market:Market){\n   return this.http.put(`${this.rootUrl}${this.param}${this.marketId}${marketId}`,market)\n   .pipe(\n    map((data:any)=>{\n      return data;\n    }),\n    catchError(this.errorHandlerService.handleCrudError)\n  );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IOdds } from '../Models/odds';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { OddsVm } from '../Models/ViewModels/OddsVm';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OddsService {\n\n  rootUrl = environment.sportsApiUrl;\n  param = 'OddsDefault';\n  paramGet = '/GetAll';\n  OddId = '?oddId=';\n\n  constructor(private http: HttpClient, private errorHandlerService: ErrorhandlerService) { }\n\n  getOdds(): Observable<OddsVm[]> {\n    return this.http.get<OddsVm[]>(`${this.rootUrl}${this.param}${this.paramGet}`)\n      .pipe(catchError(this.errorHandlerService.handleError));\n  }\n\n  getSingleOdd(oddId: number): Observable<IOdds> {\n    return this.http.get<IOdds>(`${this.rootUrl}${this.param}${this.OddId}${oddId}`);\n  }\n\n  addOdds(odd: IOdds): Observable<any> {\n    return this.http.post<any>(`${this.rootUrl}${this.param}`, odd)\n      .pipe(map((data: any) => {\n        return data;\n      }),\n        catchError(this.errorHandlerService.handleCrudError));\n  }\n  updateOdd(odd: IOdds): Observable<any> {\n    return this.http.put<any>(`${this.rootUrl}${this.param}`, odd)\n      .pipe(map((data: any) => {\n        return data;\n      }),\n        catchError(this.errorHandlerService.handleCrudError));\n  }\n\n  deleteOdd(oddId: number) {\n    return this.http.delete(`${this.rootUrl}${this.param}${this.OddId}${oddId}`)\n      .pipe(\n        map((data: any) => {\n          return data;\n        }),\n        catchError(this.errorHandlerService.handleCrudError));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport {Make} from '../Models/PrinterMake';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintermakeService {\n\n  // Make\n  rootUrl = environment.sportsApiUrl;\n  param = 'PrinterMakes';\n  paramGet = '/GetAllMakes';\n  makeID = '?makeId=';\n  constructor(private http: HttpClient, private errorHandlerService: ErrorhandlerService) { }\n\n\n  getAllMakes(): Observable<Make[]> {\n    return this.http.get<Make[]>(`${this.rootUrl}${this.param}${this.paramGet}`)\n      .pipe(catchError(this.errorHandlerService.handleError));\n  }\n\n\n  getSingleMake(makeId: number): Observable<Make> {\n    return this.http.get<Make>(`${this.rootUrl}${this.param}${this.makeID}${makeId}`);\n  }\n\n  addMake(make: Make): Observable<any> {\n    return this.http.post<any>(`${this.rootUrl}${this.param}/AddMake`, make)\n      .pipe(map((data: any) => {\n        return data;\n      }),\n        catchError(this.errorHandlerService.handleCrudError));\n  }\n  updateMake(make: Make): Observable<any> {\n    return this.http.put<any>(`${this.rootUrl}${this.param}`, make)\n      .pipe(map((data: any) => {\n        return data;\n      }),\n        catchError(this.errorHandlerService.handleCrudError));\n  }\n\n  deleteMake(makeId: number) {\n    return this.http.delete(`${this.rootUrl}${this.param}${this.makeID}${makeId}`)\n      .pipe(\n        map((data: any) => {\n          return data;\n        }),\n        catchError(this.errorHandlerService.handleCrudError));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {SportTournament} from '../Models/sportTournament';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport {ErrorhandlerService} from '../services/errorhandler.service';\nimport {catchError, map} from 'rxjs/operators';\nimport {SportTournamentVm} from '../Models/ViewModels/SportTournament';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SportTournamentService {\n\n  rootUrl=environment.sportsApiUrl;\n param='SportTournaments/';\n paramGet='GetAll';\n sportTournamentId='?sportTournamentId=';\n  constructor(private http:HttpClient,private errorHanlder:ErrorhandlerService) { }\n\n  getSportTournaments():Observable<SportTournamentVm[]>\n  {\n    return this.http.get<SportTournamentVm[]>(`${this.rootUrl}${this.param}${this.paramGet}`)\n    .pipe(catchError(this.errorHanlder.handleError));\n  }\n\n  getSingleAssociation(sportTournamentId:number):Observable<SportTournament>{\n   return this.http.get<SportTournament>(`${this.rootUrl}${this.param}${this.sportTournamentId}${sportTournamentId}`)\n   .pipe(\n    map((data:any)=>{\n      return data;\n    }),\n    catchError(this.errorHanlder.handleCrudError)\n  );\n   \n  }\n  addSportTournament(sportTournament:SportTournament){\n    return this.http.post(`${this.rootUrl}${this.param}`,sportTournament)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHanlder.handleCrudError)\n    );\n  }\n  deleteSportTournament(sportTournamentId:number){\n    return this.http.delete(`${this.rootUrl}${this.param}${this.sportTournamentId}${sportTournamentId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHanlder.handleCrudError)\n    );\n  }\n\n  updateSportTournament(sportTournamentId:number,sportTournament:SportTournament){\n    return this.http.put(`${this.rootUrl}${this.param}${this.sportTournamentId}${sportTournamentId}`,sportTournament)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHanlder.handleCrudError)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Sport } from '../Models/sport';\nimport { Observable } from 'rxjs';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport { catchError, map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SportTreeService {\n  rootUrl = environment.sportsApiUrl;\n  param = 'sports'\n  sportId = '?sportId='\n  paramSingle = '/GetSingle';\n  private httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n  constructor(private http: HttpClient, private errorHandlerService: ErrorhandlerService) { }\n\n  getSports(): Observable<Sport[]> {\n    return this.http.get<Sport[]>(`${this.rootUrl}${this.param}`)\n      .pipe(catchError(this.errorHandlerService.handleError));\n  }\n  getSIngleSport(sportId: number): Observable<Sport> {\n    return this.http.get<Sport>(`${this.rootUrl}${this.param}${this.paramSingle}${this.sportId}${sportId}`)\n      .pipe(catchError(this.errorHandlerService.handleCrudError));\n  }\n  addSport(sport: Sport) {\n    return this.http.post(`${this.rootUrl}${this.param}`, sport, this.httpOptions)\n      .pipe(\n        map((data: any) => {\n          return data;\n        }),\n        catchError(this.errorHandlerService.handleCrudError)\n      );\n  }\n  updateSport(sportId: number, sport: Sport) {\n    return this.http.put(`${this.rootUrl}${this.param}${this.sportId}${sportId}`, sport, this.httpOptions)\n      .pipe(\n        map((data: any) => {\n          return data;\n        }),\n        catchError(this.errorHandlerService.handleCrudError)\n      );\n  }\n  deleteSport(sportId: number) {\n    return this.http.delete(`${this.rootUrl}${this.param}${this.sportId}${sportId}`, this.httpOptions)\n      .pipe(\n        map((data: any) => {\n          return data;\n        }),\n        catchError(this.errorHandlerService.handleCrudError)\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SportCountry} from '../Models/SportCountry';\nimport {HttpClient} from '@angular/common/http';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { catchError, map } from 'rxjs/operators';\nimport {SportCountryVm} from '../Models/ViewModels/sportCountryVm';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SportsCountryService {\n rootUrl=environment.sportsApiUrl;\n param='SportsCountries';\n pramGet='/GetZonke';\n sportCountrId='?sportCountryId=';\n  constructor(private http:HttpClient, private errorHander:ErrorhandlerService) { }\n\n  getSportCountries():Observable<SportCountryVm[]>{\n    return this.http.get<SportCountryVm[]>(`${this.rootUrl}${this.param}${this.pramGet}`)\n    .pipe(catchError(this.errorHander.handleError));\n  }\n\n  addSportToCountry(sportCOuntry:SportCountry){\n    return this.http.post(`${this.rootUrl}${this.param}`,sportCOuntry)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHander.handleCrudError)\n    );\n  }\n\n  getSingleSportCountry(sportCountrId:number):Observable<SportCountry>{\n    return this.http.get<SportCountry>(`${this.rootUrl}${this.param}/GetSingle${this.sportCountrId}${sportCountrId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHander.handleCrudError)\n    );\n  }\n  deleteSportCountry(sportCountrId:number){\n    return this.http.delete(`${this.rootUrl}${this.param}${this.sportCountrId}${sportCountrId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHander.handleCrudError)\n    );\n  }\n\n  updateSportCountryLink(sportCountryId:number,sportCountry:SportCountry){\n    return this.http.put(`${this.rootUrl}${this.param}${this.sportCountrId}${sportCountryId}`,sportCountry)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHander.handleCrudError)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {TournamentBetType} from '../Models/tournamentBetType';\nimport {HttpClient} from '@angular/common/http';\nimport {ErrorhandlerService} from '../services/errorhandler.service';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport {catchError, map} from 'rxjs/operators';\nimport {TournamentBetTypeVm} from '../Models/ViewModels/tournamentBetTypeVm';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TournamentBettypeService {\n  rootUrl=environment.sportsApiUrl;\n  param='TournamentBetTypes';\n  paramGet='/GetAll';\n  tournamentBetTypeId='?tbTId=';\n\n  constructor(private http:HttpClient,private errorHandlerService:ErrorhandlerService) { }\n\n  getTournamentBettypes():Observable<TournamentBetTypeVm[]>{\n    return this.http.get<TournamentBetTypeVm[]>(`${this.rootUrl}${this.param}${this.paramGet}`)\n    .pipe(catchError(this.errorHandlerService.handleError));\n  }\n\n  getSingleAssociation(tbTId:number):Observable<TournamentBetType>{\n    return this.http.get<TournamentBetType>(`${this.rootUrl}${this.param}${this.tournamentBetTypeId}${tbTId}`)\n    .pipe(\n    \n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  addAssociation(tournamentBetType:TournamentBetType){\n    return this.http.post(`${this.rootUrl}${this.param}`,tournamentBetType)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n  deleteLink(tbTId:number){\n    return this.http.delete(`${this.rootUrl}${this.param}${this.tournamentBetTypeId}${tbTId}`)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  updateLink(tbId:number,tournamentBetType:TournamentBetType){\n    return this.http.put(`${this.rootUrl}${this.param}${this.tournamentBetTypeId}${tbId}`,tournamentBetType)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Tournament } from '../models/tournament';\nimport { ErrorhandlerService } from './errorhandler.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TournamentService {\n  rootUrl=environment.sportsApiUrl;\n  paramp='Tournaments';\n  tournamentId='?tournamentId=';\n  paramGet='/GetAll';\n\n  private httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n  constructor(private httpClinet:HttpClient,private errorHandlerService: ErrorhandlerService) { }\n\n  getSingleTournament(tournamentId:number):Observable<Tournament>{\n    return this.httpClinet.get<Tournament>(`${this.rootUrl}${this.paramp}${this.tournamentId}${tournamentId}`)\n    .pipe(catchError(this.errorHandlerService.handleCrudError));\n  }\n  addTournamen(tournament:Tournament){\n    return this.httpClinet.post(`${this.rootUrl}${this.paramp}`,tournament,this.httpOptions)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  deleteTournament(tournamentId:number){\n    return this.httpClinet.delete(`${this.rootUrl}${this.paramp}/delete${this.tournamentId}${tournamentId}`,this.httpOptions)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n\n  updateTournament(tournamentId:number,tournament:Tournament){\n    return this.httpClinet.put(`${this.rootUrl}${this.paramp}${this.tournamentId}${tournamentId}`,tournament)\n    .pipe(\n      map((data:any)=>{\n        return data;\n      }),\n      catchError(this.errorHandlerService.handleCrudError)\n    );\n  }\n  getTournaments():Observable<Tournament[]>{\n    return this.httpClinet.get<Tournament[]>(`${this.rootUrl}${this.paramp}${this.paramGet}`)\n    .pipe(catchError(this.errorHandlerService.handleError));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  rootUrl:'https://localhost:44365/api/',\n  sportsApiUrl:'https://localhost:44365/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport './polyfills';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n"],"sourceRoot":"webpack:///"}